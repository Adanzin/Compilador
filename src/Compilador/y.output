   0  $accept : programa $end

   1  programa : ID_simple BEGIN sentencias END
   2           | ID_simple sentencias END
   3           | ID_simple BEGIN sentencias
   4           | ID_simple sentencias

   5  sentencias : sentencias sentencia ';'
   6             | sentencia ';'
   7             | sentencia

   8  sentencia : sentencia_declarativa
   9            | sentencia_ejecutable

  10  sentencia_declarativa : declaracion_variable
  11                        | declaracion_funciones
  12                        | declaracion_subtipo

  13  declaracion_variable : tipo variables

  14  tipo : INTEGER
  15       | DOUBLE
  16       | ID_simple

  17  declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'
  18                      | TYPEDEF TRIPLE '<' tipo '>' ID_simple

  19  declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion END
  20                        | tipo FUN parametros_parentesis BEGIN cuerpo_funcion END

  21  parametros_parentesis : '(' parametros_formal ')'
  22                        | '(' ')'
  23                        | '(' error ')'

  24  parametros_formal : parametros_formal parametro ','
  25                    | parametro

  26  parametro : tipo ID_simple

  27  cuerpo_funcion : sentencias

  28  retorno : RET '(' expresion_arit ')'

  29  sentencia_ejecutable : asignacion
  30                       | sentencia_IF
  31                       | sentencia_WHILE
  32                       | sentencia_goto
  33                       | outf_rule
  34                       | retorno

  35  outf_rule : OUTF '(' expresion_arit ')'
  36            | OUTF '(' ')'
  37            | OUTF '(' cadena ')'
  38            | OUTF '(' sentencias ')'

  39  asignacion : variable_simple ASIGNACION expresion_arit
  40             | variable_simple '{' CTE '}' ASIGNACION expresion_arit

  41  invocacion : ID_simple '(' parametro_real ')'
  42             | ID_simple '(' tipo parametros_formal ')'

  43  parametro_real : list_expre

  44  list_expre : list_expre ',' expresion_arit
  45             | expresion_arit

  46  expresion_arit : expresion_arit '+' termino
  47                 | expresion_arit '-' termino
  48                 | termino

  49  termino : termino '*' factor
  50          | termino '/' factor
  51          | factor

  52  factor : variable_simple
  53         | CTE_con_sig
  54         | invocacion
  55         | variable_simple '{' CTE '}'

  56  variables : variables ',' variable_simple
  57            | variable_simple

  58  variable_simple : ID_simple

  59  ID_simple : ID

  60  CTE_con_sig : CTE
  61              | '-' CTE

  62  sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF
  63               | IF '(' condicion ')' THEN bloque_unidad ';' END_IF
  64               | IF '(' condicion ')' THEN bloque_unidad ';'
  65               | IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';'
  66               | IF condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF
  67               | IF condicion ')' THEN bloque_unidad ';' END_IF
  68               | IF '(' condicion THEN bloque_unidad ';' bloque_else ';' END_IF
  69               | IF '(' condicion THEN bloque_unidad ';' END_IF
  70               | IF condicion THEN bloque_unidad ';' bloque_else ';' END_IF
  71               | IF condicion THEN bloque_unidad ';' END_IF

  72  condicion : '(' list_expre ')' comparador '(' list_expre ')'

  73  comparador : '>'
  74             | MAYORIGUAL
  75             | '<'
  76             | MENORIGUAL
  77             | '='
  78             | DISTINTO

  79  bloque_else : bloque_else_simple
  80              | bloque_else_multiple

  81  bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END

  82  bloque_else_simple : ELSE bloque_sentencia_simple

  83  bloque_unidad : bloque_unidad_simple
  84                | bloque_unidad_multiple

  85  bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END

  86  bloque_unidad_simple : bloque_sentencia_simple

  87  bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple
  88                          | bloque_sentencia_simple

  89  bloque_sentencia_simple : sentencia_ejecutable

  90  cadena : CADENAMULTILINEA
  91         | '[' ']'

  92  sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad

  93  sentencia_goto : GOTO ETIQUETA

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2
	ID_simple  goto 3


state 1
	ID_simple : ID .  (59)

	.  reduce 59


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID_simple . BEGIN sentencias END  (1)
	programa : ID_simple . sentencias END  (2)
	programa : ID_simple . BEGIN sentencias  (3)
	programa : ID_simple . sentencias  (4)

	IF  shift 4
	BEGIN  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 14
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 4
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' END_IF  (63)
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';'  (64)
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' bloque_else ';'  (65)
	sentencia_IF : IF . condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (66)
	sentencia_IF : IF . condicion ')' THEN bloque_unidad ';' END_IF  (67)
	sentencia_IF : IF . '(' condicion THEN bloque_unidad ';' bloque_else ';' END_IF  (68)
	sentencia_IF : IF . '(' condicion THEN bloque_unidad ';' END_IF  (69)
	sentencia_IF : IF . condicion THEN bloque_unidad ';' bloque_else ';' END_IF  (70)
	sentencia_IF : IF . condicion THEN bloque_unidad ';' END_IF  (71)

	'('  shift 29
	.  error

	condicion  goto 30


state 5
	programa : ID_simple BEGIN . sentencias END  (1)
	programa : ID_simple BEGIN . sentencias  (3)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 31
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 6
	outf_rule : OUTF . '(' expresion_arit ')'  (35)
	outf_rule : OUTF . '(' ')'  (36)
	outf_rule : OUTF . '(' cadena ')'  (37)
	outf_rule : OUTF . '(' sentencias ')'  (38)

	'('  shift 32
	.  error


state 7
	declaracion_subtipo : TYPEDEF . ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)
	declaracion_subtipo : TYPEDEF . TRIPLE '<' tipo '>' ID_simple  (18)

	ID  shift 1
	TRIPLE  shift 33
	.  error

	ID_simple  goto 34


state 8
	retorno : RET . '(' expresion_arit ')'  (28)

	'('  shift 35
	.  error


state 9
	sentencia_WHILE : WHILE . '(' condicion ')' bloque_unidad  (92)

	'('  shift 36
	.  error


state 10
	sentencia_goto : GOTO . ETIQUETA  (93)

	ETIQUETA  shift 37
	.  error


state 11
	tipo : INTEGER .  (14)

	.  reduce 14


state 12
	tipo : DOUBLE .  (15)

	.  reduce 15


state 13
	tipo : ID_simple .  (16)
	variable_simple : ID_simple .  (58)

	FUN  reduce 16
	ID  reduce 16
	ASIGNACION  reduce 58
	'{'  reduce 58


state 14
	programa : ID_simple sentencias . END  (2)
	programa : ID_simple sentencias .  (4)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 38
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 4

	ID_simple  goto 13
	sentencia  goto 39
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 15
	sentencias : sentencia . ';'  (6)
	sentencias : sentencia .  (7)

	';'  shift 40
	$end  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	ID  reduce 7
	WHILE  reduce 7
	GOTO  reduce 7
	INTEGER  reduce 7
	DOUBLE  reduce 7
	')'  reduce 7


state 16
	sentencia : sentencia_declarativa .  (8)

	.  reduce 8


state 17
	sentencia : sentencia_ejecutable .  (9)

	.  reduce 9


state 18
	sentencia_declarativa : declaracion_variable .  (10)

	.  reduce 10


state 19
	sentencia_declarativa : declaracion_funciones .  (11)

	.  reduce 11


state 20
	sentencia_declarativa : declaracion_subtipo .  (12)

	.  reduce 12


state 21
	declaracion_variable : tipo . variables  (13)
	declaracion_funciones : tipo . FUN ID parametros_parentesis BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo . FUN parametros_parentesis BEGIN cuerpo_funcion END  (20)

	FUN  shift 41
	ID  shift 1
	.  error

	ID_simple  goto 42
	variables  goto 43
	variable_simple  goto 44


state 22
	sentencia_ejecutable : retorno .  (34)

	.  reduce 34


state 23
	sentencia_ejecutable : asignacion .  (29)

	.  reduce 29


state 24
	sentencia_ejecutable : sentencia_IF .  (30)

	.  reduce 30


state 25
	sentencia_ejecutable : sentencia_WHILE .  (31)

	.  reduce 31


state 26
	sentencia_ejecutable : sentencia_goto .  (32)

	.  reduce 32


state 27
	sentencia_ejecutable : outf_rule .  (33)

	.  reduce 33


state 28
	asignacion : variable_simple . ASIGNACION expresion_arit  (39)
	asignacion : variable_simple . '{' CTE '}' ASIGNACION expresion_arit  (40)

	ASIGNACION  shift 45
	'{'  shift 46
	.  error


state 29
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' END_IF  (63)
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';'  (64)
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' bloque_else ';'  (65)
	sentencia_IF : IF '(' . condicion THEN bloque_unidad ';' bloque_else ';' END_IF  (68)
	sentencia_IF : IF '(' . condicion THEN bloque_unidad ';' END_IF  (69)
	condicion : '(' . list_expre ')' comparador '(' list_expre ')'  (72)

	CTE  shift 47
	ID  shift 1
	'('  shift 48
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 52
	variable_simple  goto 53
	invocacion  goto 54
	list_expre  goto 55
	termino  goto 56
	factor  goto 57
	condicion  goto 58


state 30
	sentencia_IF : IF condicion . ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (66)
	sentencia_IF : IF condicion . ')' THEN bloque_unidad ';' END_IF  (67)
	sentencia_IF : IF condicion . THEN bloque_unidad ';' bloque_else ';' END_IF  (70)
	sentencia_IF : IF condicion . THEN bloque_unidad ';' END_IF  (71)

	THEN  shift 59
	')'  shift 60
	.  error


state 31
	programa : ID_simple BEGIN sentencias . END  (1)
	programa : ID_simple BEGIN sentencias .  (3)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 61
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 3

	ID_simple  goto 13
	sentencia  goto 39
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 32
	outf_rule : OUTF '(' . expresion_arit ')'  (35)
	outf_rule : OUTF '(' . ')'  (36)
	outf_rule : OUTF '(' . cadena ')'  (37)
	outf_rule : OUTF '(' . sentencias ')'  (38)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	CTE  shift 47
	ID  shift 1
	CADENAMULTILINEA  shift 62
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 63
	'-'  shift 49
	'['  shift 64
	.  error

	ID_simple  goto 65
	sentencias  goto 66
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	CTE_con_sig  goto 51
	retorno  goto 22
	expresion_arit  goto 67
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	cadena  goto 68
	variable_simple  goto 69
	invocacion  goto 54
	termino  goto 56
	factor  goto 57


state 33
	declaracion_subtipo : TYPEDEF TRIPLE . '<' tipo '>' ID_simple  (18)

	'<'  shift 70
	.  error


state 34
	declaracion_subtipo : TYPEDEF ID_simple . ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ASIGNACION  shift 71
	.  error


state 35
	retorno : RET '(' . expresion_arit ')'  (28)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 72
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 56
	factor  goto 57


state 36
	sentencia_WHILE : WHILE '(' . condicion ')' bloque_unidad  (92)

	'('  shift 48
	.  error

	condicion  goto 73


state 37
	sentencia_goto : GOTO ETIQUETA .  (93)

	.  reduce 93


state 38
	programa : ID_simple sentencias END .  (2)

	.  reduce 2


state 39
	sentencias : sentencias sentencia . ';'  (5)

	';'  shift 74
	.  error


state 40
	sentencias : sentencia ';' .  (6)

	.  reduce 6


state 41
	declaracion_funciones : tipo FUN . ID parametros_parentesis BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo FUN . parametros_parentesis BEGIN cuerpo_funcion END  (20)

	ID  shift 75
	'('  shift 76
	.  error

	parametros_parentesis  goto 77


state 42
	variable_simple : ID_simple .  (58)

	.  reduce 58


state 43
	declaracion_variable : tipo variables .  (13)
	variables : variables . ',' variable_simple  (56)

	','  shift 78
	$end  reduce 13
	IF  reduce 13
	END  reduce 13
	OUTF  reduce 13
	TYPEDEF  reduce 13
	RET  reduce 13
	ID  reduce 13
	WHILE  reduce 13
	GOTO  reduce 13
	INTEGER  reduce 13
	DOUBLE  reduce 13
	';'  reduce 13
	')'  reduce 13


state 44
	variables : variable_simple .  (57)

	.  reduce 57


state 45
	asignacion : variable_simple ASIGNACION . expresion_arit  (39)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 79
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 56
	factor  goto 57


state 46
	asignacion : variable_simple '{' . CTE '}' ASIGNACION expresion_arit  (40)

	CTE  shift 80
	.  error


state 47
	CTE_con_sig : CTE .  (60)

	.  reduce 60


state 48
	condicion : '(' . list_expre ')' comparador '(' list_expre ')'  (72)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 52
	variable_simple  goto 53
	invocacion  goto 54
	list_expre  goto 55
	termino  goto 56
	factor  goto 57


state 49
	CTE_con_sig : '-' . CTE  (61)

	CTE  shift 81
	.  error


state 50
	invocacion : ID_simple . '(' parametro_real ')'  (41)
	invocacion : ID_simple . '(' tipo parametros_formal ')'  (42)
	variable_simple : ID_simple .  (58)

	'('  shift 82
	$end  reduce 58
	IF  reduce 58
	END  reduce 58
	OUTF  reduce 58
	TYPEDEF  reduce 58
	RET  reduce 58
	ID  reduce 58
	WHILE  reduce 58
	GOTO  reduce 58
	INTEGER  reduce 58
	DOUBLE  reduce 58
	';'  reduce 58
	'{'  reduce 58
	','  reduce 58
	')'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58


state 51
	factor : CTE_con_sig .  (53)

	.  reduce 53


state 52
	list_expre : expresion_arit .  (45)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 83
	'-'  shift 84
	','  reduce 45
	')'  reduce 45


state 53
	factor : variable_simple .  (52)
	factor : variable_simple . '{' CTE '}'  (55)

	'{'  shift 85
	$end  reduce 52
	IF  reduce 52
	END  reduce 52
	OUTF  reduce 52
	TYPEDEF  reduce 52
	RET  reduce 52
	ID  reduce 52
	WHILE  reduce 52
	GOTO  reduce 52
	INTEGER  reduce 52
	DOUBLE  reduce 52
	';'  reduce 52
	','  reduce 52
	')'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52


state 54
	factor : invocacion .  (54)

	.  reduce 54


state 55
	list_expre : list_expre . ',' expresion_arit  (44)
	condicion : '(' list_expre . ')' comparador '(' list_expre ')'  (72)

	','  shift 86
	')'  shift 87
	.  error


state 56
	expresion_arit : termino .  (48)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 48
	IF  reduce 48
	END  reduce 48
	OUTF  reduce 48
	TYPEDEF  reduce 48
	RET  reduce 48
	ID  reduce 48
	WHILE  reduce 48
	GOTO  reduce 48
	INTEGER  reduce 48
	DOUBLE  reduce 48
	';'  reduce 48
	','  reduce 48
	')'  reduce 48
	'+'  reduce 48
	'-'  reduce 48


state 57
	termino : factor .  (51)

	.  reduce 51


state 58
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' END_IF  (63)
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';'  (64)
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' bloque_else ';'  (65)
	sentencia_IF : IF '(' condicion . THEN bloque_unidad ';' bloque_else ';' END_IF  (68)
	sentencia_IF : IF '(' condicion . THEN bloque_unidad ';' END_IF  (69)

	THEN  shift 90
	')'  shift 91
	.  error


state 59
	sentencia_IF : IF condicion THEN . bloque_unidad ';' bloque_else ';' END_IF  (70)
	sentencia_IF : IF condicion THEN . bloque_unidad ';' END_IF  (71)

	IF  shift 4
	BEGIN  shift 92
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 94
	bloque_sentencia_simple  goto 95
	bloque_unidad_simple  goto 96
	bloque_unidad_multiple  goto 97


state 60
	sentencia_IF : IF condicion ')' . THEN bloque_unidad ';' bloque_else ';' END_IF  (66)
	sentencia_IF : IF condicion ')' . THEN bloque_unidad ';' END_IF  (67)

	THEN  shift 98
	.  error


state 61
	programa : ID_simple BEGIN sentencias END .  (1)

	.  reduce 1


state 62
	cadena : CADENAMULTILINEA .  (90)

	.  reduce 90


state 63
	outf_rule : OUTF '(' ')' .  (36)

	.  reduce 36


state 64
	cadena : '[' . ']'  (91)

	']'  shift 99
	.  error


state 65
	tipo : ID_simple .  (16)
	invocacion : ID_simple . '(' parametro_real ')'  (41)
	invocacion : ID_simple . '(' tipo parametros_formal ')'  (42)
	variable_simple : ID_simple .  (58)

	'('  shift 82
	FUN  reduce 16
	ID  reduce 16
	INTEGER  reduce 16
	DOUBLE  reduce 16
	ASIGNACION  reduce 58
	'{'  reduce 58
	','  reduce 58
	')'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58


state 66
	sentencias : sentencias . sentencia ';'  (5)
	outf_rule : OUTF '(' sentencias . ')'  (38)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 100
	.  error

	ID_simple  goto 13
	sentencia  goto 39
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 67
	outf_rule : OUTF '(' expresion_arit . ')'  (35)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	')'  shift 101
	'+'  shift 83
	'-'  shift 84
	.  error


state 68
	outf_rule : OUTF '(' cadena . ')'  (37)

	')'  shift 102
	.  error


state 69
	asignacion : variable_simple . ASIGNACION expresion_arit  (39)
	asignacion : variable_simple . '{' CTE '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple .  (52)
	factor : variable_simple . '{' CTE '}'  (55)

	ASIGNACION  shift 45
	'{'  shift 103
	')'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52


state 70
	declaracion_subtipo : TYPEDEF TRIPLE '<' . tipo '>' ID_simple  (18)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 104
	tipo  goto 105


state 71
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION . tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 104
	tipo  goto 106


state 72
	retorno : RET '(' expresion_arit . ')'  (28)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	')'  shift 107
	'+'  shift 83
	'-'  shift 84
	.  error


state 73
	sentencia_WHILE : WHILE '(' condicion . ')' bloque_unidad  (92)

	')'  shift 108
	.  error


state 74
	sentencias : sentencias sentencia ';' .  (5)

	.  reduce 5


state 75
	declaracion_funciones : tipo FUN ID . parametros_parentesis BEGIN cuerpo_funcion END  (19)

	'('  shift 76
	.  error

	parametros_parentesis  goto 109


state 76
	parametros_parentesis : '(' . parametros_formal ')'  (21)
	parametros_parentesis : '(' . ')'  (22)
	parametros_parentesis : '(' . error ')'  (23)

	error  shift 110
	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 111
	.  error

	ID_simple  goto 104
	tipo  goto 112
	parametros_formal  goto 113
	parametro  goto 114


state 77
	declaracion_funciones : tipo FUN parametros_parentesis . BEGIN cuerpo_funcion END  (20)

	BEGIN  shift 115
	.  error


state 78
	variables : variables ',' . variable_simple  (56)

	ID  shift 1
	.  error

	ID_simple  goto 42
	variable_simple  goto 116


state 79
	asignacion : variable_simple ASIGNACION expresion_arit .  (39)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 83
	'-'  shift 84
	$end  reduce 39
	IF  reduce 39
	END  reduce 39
	OUTF  reduce 39
	TYPEDEF  reduce 39
	RET  reduce 39
	ID  reduce 39
	WHILE  reduce 39
	GOTO  reduce 39
	INTEGER  reduce 39
	DOUBLE  reduce 39
	';'  reduce 39
	')'  reduce 39


state 80
	asignacion : variable_simple '{' CTE . '}' ASIGNACION expresion_arit  (40)

	'}'  shift 117
	.  error


state 81
	CTE_con_sig : '-' CTE .  (61)

	.  reduce 61


state 82
	invocacion : ID_simple '(' . parametro_real ')'  (41)
	invocacion : ID_simple '(' . tipo parametros_formal ')'  (42)

	CTE  shift 47
	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	'-'  shift 49
	.  error

	ID_simple  goto 65
	tipo  goto 118
	CTE_con_sig  goto 51
	expresion_arit  goto 52
	variable_simple  goto 53
	invocacion  goto 54
	parametro_real  goto 119
	list_expre  goto 120
	termino  goto 56
	factor  goto 57


state 83
	expresion_arit : expresion_arit '+' . termino  (46)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 121
	factor  goto 57


state 84
	expresion_arit : expresion_arit '-' . termino  (47)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 122
	factor  goto 57


state 85
	factor : variable_simple '{' . CTE '}'  (55)

	CTE  shift 123
	.  error


state 86
	list_expre : list_expre ',' . expresion_arit  (44)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 124
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 56
	factor  goto 57


state 87
	condicion : '(' list_expre ')' . comparador '(' list_expre ')'  (72)

	MAYORIGUAL  shift 125
	MENORIGUAL  shift 126
	DISTINTO  shift 127
	'<'  shift 128
	'>'  shift 129
	'='  shift 130
	.  error

	comparador  goto 131


state 88
	termino : termino '*' . factor  (49)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	variable_simple  goto 53
	invocacion  goto 54
	factor  goto 132


state 89
	termino : termino '/' . factor  (50)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	variable_simple  goto 53
	invocacion  goto 54
	factor  goto 133


state 90
	sentencia_IF : IF '(' condicion THEN . bloque_unidad ';' bloque_else ';' END_IF  (68)
	sentencia_IF : IF '(' condicion THEN . bloque_unidad ';' END_IF  (69)

	IF  shift 4
	BEGIN  shift 92
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 134
	bloque_sentencia_simple  goto 95
	bloque_unidad_simple  goto 96
	bloque_unidad_multiple  goto 97


state 91
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' END_IF  (63)
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';'  (64)
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' bloque_else ';'  (65)

	THEN  shift 135
	.  error


state 92
	bloque_unidad_multiple : BEGIN . bloque_sent_ejecutables END  (85)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sent_ejecutables  goto 136
	bloque_sentencia_simple  goto 137


state 93
	bloque_sentencia_simple : sentencia_ejecutable .  (89)

	.  reduce 89


state 94
	sentencia_IF : IF condicion THEN bloque_unidad . ';' bloque_else ';' END_IF  (70)
	sentencia_IF : IF condicion THEN bloque_unidad . ';' END_IF  (71)

	';'  shift 138
	.  error


state 95
	bloque_unidad_simple : bloque_sentencia_simple .  (86)

	.  reduce 86


state 96
	bloque_unidad : bloque_unidad_simple .  (83)

	.  reduce 83


state 97
	bloque_unidad : bloque_unidad_multiple .  (84)

	.  reduce 84


state 98
	sentencia_IF : IF condicion ')' THEN . bloque_unidad ';' bloque_else ';' END_IF  (66)
	sentencia_IF : IF condicion ')' THEN . bloque_unidad ';' END_IF  (67)

	IF  shift 4
	BEGIN  shift 92
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 139
	bloque_sentencia_simple  goto 95
	bloque_unidad_simple  goto 96
	bloque_unidad_multiple  goto 97


state 99
	cadena : '[' ']' .  (91)

	.  reduce 91


state 100
	outf_rule : OUTF '(' sentencias ')' .  (38)

	.  reduce 38


state 101
	outf_rule : OUTF '(' expresion_arit ')' .  (35)

	.  reduce 35


state 102
	outf_rule : OUTF '(' cadena ')' .  (37)

	.  reduce 37


state 103
	asignacion : variable_simple '{' . CTE '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' . CTE '}'  (55)

	CTE  shift 140
	.  error


state 104
	tipo : ID_simple .  (16)

	.  reduce 16


state 105
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo . '>' ID_simple  (18)

	'>'  shift 141
	.  error


state 106
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo . '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	'{'  shift 142
	.  error


state 107
	retorno : RET '(' expresion_arit ')' .  (28)

	.  reduce 28


state 108
	sentencia_WHILE : WHILE '(' condicion ')' . bloque_unidad  (92)

	IF  shift 4
	BEGIN  shift 92
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 143
	bloque_sentencia_simple  goto 95
	bloque_unidad_simple  goto 96
	bloque_unidad_multiple  goto 97


state 109
	declaracion_funciones : tipo FUN ID parametros_parentesis . BEGIN cuerpo_funcion END  (19)

	BEGIN  shift 144
	.  error


state 110
	parametros_parentesis : '(' error . ')'  (23)

	')'  shift 145
	.  error


state 111
	parametros_parentesis : '(' ')' .  (22)

	.  reduce 22


state 112
	parametro : tipo . ID_simple  (26)

	ID  shift 1
	.  error

	ID_simple  goto 146


state 113
	parametros_parentesis : '(' parametros_formal . ')'  (21)
	parametros_formal : parametros_formal . parametro ','  (24)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 147
	.  error

	ID_simple  goto 104
	tipo  goto 112
	parametro  goto 148


state 114
	parametros_formal : parametro .  (25)

	.  reduce 25


state 115
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN . cuerpo_funcion END  (20)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 149
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 150
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 116
	variables : variables ',' variable_simple .  (56)

	.  reduce 56


state 117
	asignacion : variable_simple '{' CTE '}' . ASIGNACION expresion_arit  (40)

	ASIGNACION  shift 151
	.  error


state 118
	invocacion : ID_simple '(' tipo . parametros_formal ')'  (42)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 104
	tipo  goto 112
	parametros_formal  goto 152
	parametro  goto 114


state 119
	invocacion : ID_simple '(' parametro_real . ')'  (41)

	')'  shift 153
	.  error


state 120
	parametro_real : list_expre .  (43)
	list_expre : list_expre . ',' expresion_arit  (44)

	','  shift 86
	')'  reduce 43


state 121
	expresion_arit : expresion_arit '+' termino .  (46)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 46
	IF  reduce 46
	END  reduce 46
	OUTF  reduce 46
	TYPEDEF  reduce 46
	RET  reduce 46
	ID  reduce 46
	WHILE  reduce 46
	GOTO  reduce 46
	INTEGER  reduce 46
	DOUBLE  reduce 46
	';'  reduce 46
	','  reduce 46
	')'  reduce 46
	'+'  reduce 46
	'-'  reduce 46


state 122
	expresion_arit : expresion_arit '-' termino .  (47)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 47
	IF  reduce 47
	END  reduce 47
	OUTF  reduce 47
	TYPEDEF  reduce 47
	RET  reduce 47
	ID  reduce 47
	WHILE  reduce 47
	GOTO  reduce 47
	INTEGER  reduce 47
	DOUBLE  reduce 47
	';'  reduce 47
	','  reduce 47
	')'  reduce 47
	'+'  reduce 47
	'-'  reduce 47


state 123
	factor : variable_simple '{' CTE . '}'  (55)

	'}'  shift 154
	.  error


state 124
	list_expre : list_expre ',' expresion_arit .  (44)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 83
	'-'  shift 84
	','  reduce 44
	')'  reduce 44


state 125
	comparador : MAYORIGUAL .  (74)

	.  reduce 74


state 126
	comparador : MENORIGUAL .  (76)

	.  reduce 76


state 127
	comparador : DISTINTO .  (78)

	.  reduce 78


state 128
	comparador : '<' .  (75)

	.  reduce 75


state 129
	comparador : '>' .  (73)

	.  reduce 73


state 130
	comparador : '=' .  (77)

	.  reduce 77


state 131
	condicion : '(' list_expre ')' comparador . '(' list_expre ')'  (72)

	'('  shift 155
	.  error


state 132
	termino : termino '*' factor .  (49)

	.  reduce 49


state 133
	termino : termino '/' factor .  (50)

	.  reduce 50


state 134
	sentencia_IF : IF '(' condicion THEN bloque_unidad . ';' bloque_else ';' END_IF  (68)
	sentencia_IF : IF '(' condicion THEN bloque_unidad . ';' END_IF  (69)

	';'  shift 156
	.  error


state 135
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' END_IF  (63)
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';'  (64)
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' bloque_else ';'  (65)

	IF  shift 4
	BEGIN  shift 92
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 157
	bloque_sentencia_simple  goto 95
	bloque_unidad_simple  goto 96
	bloque_unidad_multiple  goto 97


state 136
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables . END  (85)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (87)

	IF  shift 4
	END  shift 158
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 159


state 137
	bloque_sent_ejecutables : bloque_sentencia_simple .  (88)

	.  reduce 88


state 138
	sentencia_IF : IF condicion THEN bloque_unidad ';' . bloque_else ';' END_IF  (70)
	sentencia_IF : IF condicion THEN bloque_unidad ';' . END_IF  (71)

	ELSE  shift 160
	END_IF  shift 161
	.  error

	bloque_else  goto 162
	bloque_else_simple  goto 163
	bloque_else_multiple  goto 164


state 139
	sentencia_IF : IF condicion ')' THEN bloque_unidad . ';' bloque_else ';' END_IF  (66)
	sentencia_IF : IF condicion ')' THEN bloque_unidad . ';' END_IF  (67)

	';'  shift 165
	.  error


state 140
	asignacion : variable_simple '{' CTE . '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' CTE . '}'  (55)

	'}'  shift 166
	.  error


state 141
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' . ID_simple  (18)

	ID  shift 1
	.  error

	ID_simple  goto 167


state 142
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' . CTE_con_sig ',' CTE_con_sig '}'  (17)

	CTE  shift 47
	'-'  shift 49
	.  error

	CTE_con_sig  goto 168


state 143
	sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad .  (92)

	.  reduce 92


state 144
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN . cuerpo_funcion END  (19)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 149
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 169
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 145
	parametros_parentesis : '(' error ')' .  (23)

	.  reduce 23


state 146
	parametro : tipo ID_simple .  (26)

	.  reduce 26


state 147
	parametros_parentesis : '(' parametros_formal ')' .  (21)

	.  reduce 21


state 148
	parametros_formal : parametros_formal parametro . ','  (24)

	','  shift 170
	.  error


state 149
	sentencias : sentencias . sentencia ';'  (5)
	cuerpo_funcion : sentencias .  (27)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	END  reduce 27

	ID_simple  goto 13
	sentencia  goto 39
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 150
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN cuerpo_funcion . END  (20)

	END  shift 171
	.  error


state 151
	asignacion : variable_simple '{' CTE '}' ASIGNACION . expresion_arit  (40)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 172
	variable_simple  goto 53
	invocacion  goto 54
	termino  goto 56
	factor  goto 57


state 152
	parametros_formal : parametros_formal . parametro ','  (24)
	invocacion : ID_simple '(' tipo parametros_formal . ')'  (42)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 173
	.  error

	ID_simple  goto 104
	tipo  goto 112
	parametro  goto 148


state 153
	invocacion : ID_simple '(' parametro_real ')' .  (41)

	.  reduce 41


state 154
	factor : variable_simple '{' CTE '}' .  (55)

	.  reduce 55


state 155
	condicion : '(' list_expre ')' comparador '(' . list_expre ')'  (72)

	CTE  shift 47
	ID  shift 1
	'-'  shift 49
	.  error

	ID_simple  goto 50
	CTE_con_sig  goto 51
	expresion_arit  goto 52
	variable_simple  goto 53
	invocacion  goto 54
	list_expre  goto 174
	termino  goto 56
	factor  goto 57


state 156
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' . bloque_else ';' END_IF  (68)
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' . END_IF  (69)

	ELSE  shift 160
	END_IF  shift 175
	.  error

	bloque_else  goto 176
	bloque_else_simple  goto 163
	bloque_else_multiple  goto 164


state 157
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' END_IF  (63)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';'  (64)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' bloque_else ';'  (65)

	';'  shift 177
	.  error


state 158
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END .  (85)

	.  reduce 85


state 159
	bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple .  (87)

	.  reduce 87


state 160
	bloque_else_multiple : ELSE . BEGIN bloque_sent_ejecutables END  (81)
	bloque_else_simple : ELSE . bloque_sentencia_simple  (82)

	IF  shift 4
	BEGIN  shift 178
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 179


state 161
	sentencia_IF : IF condicion THEN bloque_unidad ';' END_IF .  (71)

	.  reduce 71


state 162
	sentencia_IF : IF condicion THEN bloque_unidad ';' bloque_else . ';' END_IF  (70)

	';'  shift 180
	.  error


state 163
	bloque_else : bloque_else_simple .  (79)

	.  reduce 79


state 164
	bloque_else : bloque_else_multiple .  (80)

	.  reduce 80


state 165
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' . bloque_else ';' END_IF  (66)
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' . END_IF  (67)

	ELSE  shift 160
	END_IF  shift 181
	.  error

	bloque_else  goto 182
	bloque_else_simple  goto 163
	bloque_else_multiple  goto 164


state 166
	asignacion : variable_simple '{' CTE '}' . ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' CTE '}' .  (55)

	ASIGNACION  shift 151
	')'  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	'*'  reduce 55
	'/'  reduce 55


state 167
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' ID_simple .  (18)

	.  reduce 18


state 168
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig . ',' CTE_con_sig '}'  (17)

	','  shift 183
	.  error


state 169
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion . END  (19)

	END  shift 184
	.  error


state 170
	parametros_formal : parametros_formal parametro ',' .  (24)

	.  reduce 24


state 171
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN cuerpo_funcion END .  (20)

	.  reduce 20


state 172
	asignacion : variable_simple '{' CTE '}' ASIGNACION expresion_arit .  (40)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 83
	'-'  shift 84
	$end  reduce 40
	IF  reduce 40
	END  reduce 40
	OUTF  reduce 40
	TYPEDEF  reduce 40
	RET  reduce 40
	ID  reduce 40
	WHILE  reduce 40
	GOTO  reduce 40
	INTEGER  reduce 40
	DOUBLE  reduce 40
	';'  reduce 40
	')'  reduce 40


state 173
	invocacion : ID_simple '(' tipo parametros_formal ')' .  (42)

	.  reduce 42


state 174
	list_expre : list_expre . ',' expresion_arit  (44)
	condicion : '(' list_expre ')' comparador '(' list_expre . ')'  (72)

	','  shift 86
	')'  shift 185
	.  error


state 175
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' END_IF .  (69)

	.  reduce 69


state 176
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' bloque_else . ';' END_IF  (68)

	';'  shift 186
	.  error


state 177
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . END_IF  (63)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' .  (64)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . bloque_else ';'  (65)

	ELSE  shift 160
	END_IF  shift 187
	$end  reduce 64
	IF  reduce 64
	END  reduce 64
	OUTF  reduce 64
	TYPEDEF  reduce 64
	RET  reduce 64
	ID  reduce 64
	WHILE  reduce 64
	GOTO  reduce 64
	INTEGER  reduce 64
	DOUBLE  reduce 64
	';'  reduce 64
	')'  reduce 64

	bloque_else  goto 188
	bloque_else_simple  goto 163
	bloque_else_multiple  goto 164


state 178
	bloque_else_multiple : ELSE BEGIN . bloque_sent_ejecutables END  (81)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sent_ejecutables  goto 189
	bloque_sentencia_simple  goto 137


state 179
	bloque_else_simple : ELSE bloque_sentencia_simple .  (82)

	.  reduce 82


state 180
	sentencia_IF : IF condicion THEN bloque_unidad ';' bloque_else ';' . END_IF  (70)

	END_IF  shift 190
	.  error


state 181
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' END_IF .  (67)

	.  reduce 67


state 182
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' bloque_else . ';' END_IF  (66)

	';'  shift 191
	.  error


state 183
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' . CTE_con_sig '}'  (17)

	CTE  shift 47
	'-'  shift 49
	.  error

	CTE_con_sig  goto 192


state 184
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion END .  (19)

	.  reduce 19


state 185
	condicion : '(' list_expre ')' comparador '(' list_expre ')' .  (72)

	.  reduce 72


state 186
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' bloque_else ';' . END_IF  (68)

	END_IF  shift 193
	.  error


state 187
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' END_IF .  (63)

	.  reduce 63


state 188
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else . ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else . ';'  (65)

	';'  shift 194
	.  error


state 189
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables . END  (81)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (87)

	IF  shift 4
	END  shift 195
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 42
	sentencia_ejecutable  goto 93
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 159


state 190
	sentencia_IF : IF condicion THEN bloque_unidad ';' bloque_else ';' END_IF .  (70)

	.  reduce 70


state 191
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' bloque_else ';' . END_IF  (66)

	END_IF  shift 196
	.  error


state 192
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig . '}'  (17)

	'}'  shift 197
	.  error


state 193
	sentencia_IF : IF '(' condicion THEN bloque_unidad ';' bloque_else ';' END_IF .  (68)

	.  reduce 68


state 194
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' . END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' .  (65)

	END_IF  shift 198
	$end  reduce 65
	IF  reduce 65
	END  reduce 65
	OUTF  reduce 65
	TYPEDEF  reduce 65
	RET  reduce 65
	ID  reduce 65
	WHILE  reduce 65
	GOTO  reduce 65
	INTEGER  reduce 65
	DOUBLE  reduce 65
	';'  reduce 65
	')'  reduce 65


state 195
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END .  (81)

	.  reduce 81


state 196
	sentencia_IF : IF condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF .  (66)

	.  reduce 66


state 197
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}' .  (17)

	.  reduce 17


state 198
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF .  (62)

	.  reduce 62


40 terminals, 41 nonterminals
94 grammar rules, 199 states
