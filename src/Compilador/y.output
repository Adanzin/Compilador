   0  $accept : programa $end

   1  programa : ID_simple BEGIN sentencias END
   2           | ID_simple sentencias END
   3           | ID_simple BEGIN sentencias
   4           | ID_simple sentencias

   5  sentencias : sentencias sentencia ';'
   6             | sentencia ';'
   7             | sentencia

   8  sentencia : sentencia_declarativa
   9            | sentencia_ejecutable

  10  sentencia_declarativa : declaracion_variable
  11                        | declaracion_funciones
  12                        | declaracion_subtipo

  13  declaracion_variable : tipo variables

  14  tipo : INTEGER
  15       | DOUBLE
  16       | ID_simple

  17  declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'
  18                      | TYPEDEF TRIPLE '<' tipo '>' ID_simple

  19  declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion END
  20                        | tipo FUN parametros_parentesis BEGIN cuerpo_funcion END

  21  parametros_parentesis : '(' parametros_formal ')'
  22                        | '(' ')'
  23                        | '(' error ')'

  24  parametros_formal : parametros_formal parametro ','
  25                    | parametro

  26  parametro : tipo ID_simple

  27  cuerpo_funcion : sentencias

  28  retorno : RET '(' expresion_arit ')'

  29  sentencia_ejecutable : asignacion
  30                       | sentencia_IF
  31                       | sentencia_WHILE
  32                       | sentencia_goto
  33                       | outf_rule
  34                       | retorno

  35  outf_rule : OUTF '(' expresion_arit ')'
  36            | OUTF '(' ')'
  37            | OUTF '(' cadena ')'
  38            | OUTF '(' sentencias ')'

  39  asignacion : variable_simple ASIGNACION expresion_arit
  40             | variable_simple '{' CTE '}' ASIGNACION expresion_arit

  41  invocacion : ID_simple '(' parametro_real ')'
  42             | ID_simple '(' tipo parametros_formal ')'

  43  parametro_real : list_expre

  44  list_expre : list_expre ',' expresion_arit
  45             | expresion_arit

  46  expresion_arit : expresion_arit '+' termino
  47                 | expresion_arit '-' termino
  48                 | termino

  49  termino : termino '*' factor
  50          | termino '/' factor
  51          | factor

  52  factor : variable_simple
  53         | CTE_con_sig
  54         | invocacion
  55         | variable_simple '{' CTE '}'

  56  variables : variables ',' variable_simple
  57            | variable_simple

  58  variable_simple : ID_simple

  59  ID_simple : ID

  60  CTE_con_sig : CTE
  61              | '-' CTE

  62  sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF
  63               | IF '(' condicion ')' THEN bloque_unidad ';' END_IF

  64  condicion : '(' list_expre ')' comparador '(' list_expre ')'

  65  comparador : '>'
  66             | MAYORIGUAL
  67             | '<'
  68             | MENORIGUAL
  69             | '='
  70             | DISTINTO

  71  bloque_else : bloque_else_simple
  72              | bloque_else_multiple

  73  bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END

  74  bloque_else_simple : ELSE bloque_sentencia_simple

  75  bloque_unidad : bloque_unidad_simple
  76                | bloque_unidad_multiple

  77  bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END

  78  bloque_unidad_simple : bloque_sentencia_simple

  79  bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple
  80                          | bloque_sentencia_simple

  81  bloque_sentencia_simple : sentencia_ejecutable

  82  cadena : CADENAMULTILINEA
  83         | '[' ']'

  84  sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad

  85  sentencia_goto : GOTO ETIQUETA

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2
	ID_simple  goto 3


state 1
	ID_simple : ID .  (59)

	.  reduce 59


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID_simple . BEGIN sentencias END  (1)
	programa : ID_simple . sentencias END  (2)
	programa : ID_simple . BEGIN sentencias  (3)
	programa : ID_simple . sentencias  (4)

	IF  shift 4
	BEGIN  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 14
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 4
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' END_IF  (63)

	'('  shift 29
	.  error


state 5
	programa : ID_simple BEGIN . sentencias END  (1)
	programa : ID_simple BEGIN . sentencias  (3)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 30
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 6
	outf_rule : OUTF . '(' expresion_arit ')'  (35)
	outf_rule : OUTF . '(' ')'  (36)
	outf_rule : OUTF . '(' cadena ')'  (37)
	outf_rule : OUTF . '(' sentencias ')'  (38)

	'('  shift 31
	.  error


state 7
	declaracion_subtipo : TYPEDEF . ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)
	declaracion_subtipo : TYPEDEF . TRIPLE '<' tipo '>' ID_simple  (18)

	ID  shift 1
	TRIPLE  shift 32
	.  error

	ID_simple  goto 33


state 8
	retorno : RET . '(' expresion_arit ')'  (28)

	'('  shift 34
	.  error


state 9
	sentencia_WHILE : WHILE . '(' condicion ')' bloque_unidad  (84)

	'('  shift 35
	.  error


state 10
	sentencia_goto : GOTO . ETIQUETA  (85)

	ETIQUETA  shift 36
	.  error


state 11
	tipo : INTEGER .  (14)

	.  reduce 14


state 12
	tipo : DOUBLE .  (15)

	.  reduce 15


state 13
	tipo : ID_simple .  (16)
	variable_simple : ID_simple .  (58)

	FUN  reduce 16
	ID  reduce 16
	ASIGNACION  reduce 58
	'{'  reduce 58


state 14
	programa : ID_simple sentencias . END  (2)
	programa : ID_simple sentencias .  (4)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 37
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 4

	ID_simple  goto 13
	sentencia  goto 38
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 15
	sentencias : sentencia . ';'  (6)
	sentencias : sentencia .  (7)

	';'  shift 39
	$end  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	ID  reduce 7
	WHILE  reduce 7
	GOTO  reduce 7
	INTEGER  reduce 7
	DOUBLE  reduce 7
	')'  reduce 7


state 16
	sentencia : sentencia_declarativa .  (8)

	.  reduce 8


state 17
	sentencia : sentencia_ejecutable .  (9)

	.  reduce 9


state 18
	sentencia_declarativa : declaracion_variable .  (10)

	.  reduce 10


state 19
	sentencia_declarativa : declaracion_funciones .  (11)

	.  reduce 11


state 20
	sentencia_declarativa : declaracion_subtipo .  (12)

	.  reduce 12


state 21
	declaracion_variable : tipo . variables  (13)
	declaracion_funciones : tipo . FUN ID parametros_parentesis BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo . FUN parametros_parentesis BEGIN cuerpo_funcion END  (20)

	FUN  shift 40
	ID  shift 1
	.  error

	ID_simple  goto 41
	variables  goto 42
	variable_simple  goto 43


state 22
	sentencia_ejecutable : retorno .  (34)

	.  reduce 34


state 23
	sentencia_ejecutable : asignacion .  (29)

	.  reduce 29


state 24
	sentencia_ejecutable : sentencia_IF .  (30)

	.  reduce 30


state 25
	sentencia_ejecutable : sentencia_WHILE .  (31)

	.  reduce 31


state 26
	sentencia_ejecutable : sentencia_goto .  (32)

	.  reduce 32


state 27
	sentencia_ejecutable : outf_rule .  (33)

	.  reduce 33


state 28
	asignacion : variable_simple . ASIGNACION expresion_arit  (39)
	asignacion : variable_simple . '{' CTE '}' ASIGNACION expresion_arit  (40)

	ASIGNACION  shift 44
	'{'  shift 45
	.  error


state 29
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' END_IF  (63)

	'('  shift 46
	.  error

	condicion  goto 47


state 30
	programa : ID_simple BEGIN sentencias . END  (1)
	programa : ID_simple BEGIN sentencias .  (3)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 48
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 3

	ID_simple  goto 13
	sentencia  goto 38
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 31
	outf_rule : OUTF '(' . expresion_arit ')'  (35)
	outf_rule : OUTF '(' . ')'  (36)
	outf_rule : OUTF '(' . cadena ')'  (37)
	outf_rule : OUTF '(' . sentencias ')'  (38)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	CTE  shift 49
	ID  shift 1
	CADENAMULTILINEA  shift 50
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 51
	'-'  shift 52
	'['  shift 53
	.  error

	ID_simple  goto 54
	sentencias  goto 55
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	CTE_con_sig  goto 56
	retorno  goto 22
	expresion_arit  goto 57
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	cadena  goto 58
	variable_simple  goto 59
	invocacion  goto 60
	termino  goto 61
	factor  goto 62


state 32
	declaracion_subtipo : TYPEDEF TRIPLE . '<' tipo '>' ID_simple  (18)

	'<'  shift 63
	.  error


state 33
	declaracion_subtipo : TYPEDEF ID_simple . ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ASIGNACION  shift 64
	.  error


state 34
	retorno : RET '(' . expresion_arit ')'  (28)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 66
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 61
	factor  goto 62


state 35
	sentencia_WHILE : WHILE '(' . condicion ')' bloque_unidad  (84)

	'('  shift 46
	.  error

	condicion  goto 68


state 36
	sentencia_goto : GOTO ETIQUETA .  (85)

	.  reduce 85


state 37
	programa : ID_simple sentencias END .  (2)

	.  reduce 2


state 38
	sentencias : sentencias sentencia . ';'  (5)

	';'  shift 69
	.  error


state 39
	sentencias : sentencia ';' .  (6)

	.  reduce 6


state 40
	declaracion_funciones : tipo FUN . ID parametros_parentesis BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo FUN . parametros_parentesis BEGIN cuerpo_funcion END  (20)

	ID  shift 70
	'('  shift 71
	.  error

	parametros_parentesis  goto 72


state 41
	variable_simple : ID_simple .  (58)

	.  reduce 58


state 42
	declaracion_variable : tipo variables .  (13)
	variables : variables . ',' variable_simple  (56)

	','  shift 73
	$end  reduce 13
	IF  reduce 13
	END  reduce 13
	OUTF  reduce 13
	TYPEDEF  reduce 13
	RET  reduce 13
	ID  reduce 13
	WHILE  reduce 13
	GOTO  reduce 13
	INTEGER  reduce 13
	DOUBLE  reduce 13
	';'  reduce 13
	')'  reduce 13


state 43
	variables : variable_simple .  (57)

	.  reduce 57


state 44
	asignacion : variable_simple ASIGNACION . expresion_arit  (39)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 74
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 61
	factor  goto 62


state 45
	asignacion : variable_simple '{' . CTE '}' ASIGNACION expresion_arit  (40)

	CTE  shift 75
	.  error


state 46
	condicion : '(' . list_expre ')' comparador '(' list_expre ')'  (64)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 76
	variable_simple  goto 67
	invocacion  goto 60
	list_expre  goto 77
	termino  goto 61
	factor  goto 62


state 47
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' END_IF  (63)

	')'  shift 78
	.  error


state 48
	programa : ID_simple BEGIN sentencias END .  (1)

	.  reduce 1


state 49
	CTE_con_sig : CTE .  (60)

	.  reduce 60


state 50
	cadena : CADENAMULTILINEA .  (82)

	.  reduce 82


state 51
	outf_rule : OUTF '(' ')' .  (36)

	.  reduce 36


state 52
	CTE_con_sig : '-' . CTE  (61)

	CTE  shift 79
	.  error


state 53
	cadena : '[' . ']'  (83)

	']'  shift 80
	.  error


state 54
	tipo : ID_simple .  (16)
	invocacion : ID_simple . '(' parametro_real ')'  (41)
	invocacion : ID_simple . '(' tipo parametros_formal ')'  (42)
	variable_simple : ID_simple .  (58)

	'('  shift 81
	FUN  reduce 16
	ID  reduce 16
	INTEGER  reduce 16
	DOUBLE  reduce 16
	ASIGNACION  reduce 58
	'{'  reduce 58
	','  reduce 58
	')'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58


state 55
	sentencias : sentencias . sentencia ';'  (5)
	outf_rule : OUTF '(' sentencias . ')'  (38)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 82
	.  error

	ID_simple  goto 13
	sentencia  goto 38
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 56
	factor : CTE_con_sig .  (53)

	.  reduce 53


state 57
	outf_rule : OUTF '(' expresion_arit . ')'  (35)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	')'  shift 83
	'+'  shift 84
	'-'  shift 85
	.  error


state 58
	outf_rule : OUTF '(' cadena . ')'  (37)

	')'  shift 86
	.  error


state 59
	asignacion : variable_simple . ASIGNACION expresion_arit  (39)
	asignacion : variable_simple . '{' CTE '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple .  (52)
	factor : variable_simple . '{' CTE '}'  (55)

	ASIGNACION  shift 44
	'{'  shift 87
	')'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52


state 60
	factor : invocacion .  (54)

	.  reduce 54


state 61
	expresion_arit : termino .  (48)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 48
	IF  reduce 48
	END  reduce 48
	OUTF  reduce 48
	TYPEDEF  reduce 48
	RET  reduce 48
	ID  reduce 48
	WHILE  reduce 48
	GOTO  reduce 48
	INTEGER  reduce 48
	DOUBLE  reduce 48
	';'  reduce 48
	','  reduce 48
	')'  reduce 48
	'+'  reduce 48
	'-'  reduce 48


state 62
	termino : factor .  (51)

	.  reduce 51


state 63
	declaracion_subtipo : TYPEDEF TRIPLE '<' . tipo '>' ID_simple  (18)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 90
	tipo  goto 91


state 64
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION . tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 90
	tipo  goto 92


state 65
	invocacion : ID_simple . '(' parametro_real ')'  (41)
	invocacion : ID_simple . '(' tipo parametros_formal ')'  (42)
	variable_simple : ID_simple .  (58)

	'('  shift 81
	$end  reduce 58
	IF  reduce 58
	END  reduce 58
	OUTF  reduce 58
	TYPEDEF  reduce 58
	RET  reduce 58
	ID  reduce 58
	WHILE  reduce 58
	GOTO  reduce 58
	INTEGER  reduce 58
	DOUBLE  reduce 58
	';'  reduce 58
	'{'  reduce 58
	','  reduce 58
	')'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	'*'  reduce 58
	'/'  reduce 58


state 66
	retorno : RET '(' expresion_arit . ')'  (28)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	')'  shift 93
	'+'  shift 84
	'-'  shift 85
	.  error


state 67
	factor : variable_simple .  (52)
	factor : variable_simple . '{' CTE '}'  (55)

	'{'  shift 94
	$end  reduce 52
	IF  reduce 52
	END  reduce 52
	OUTF  reduce 52
	TYPEDEF  reduce 52
	RET  reduce 52
	ID  reduce 52
	WHILE  reduce 52
	GOTO  reduce 52
	INTEGER  reduce 52
	DOUBLE  reduce 52
	';'  reduce 52
	','  reduce 52
	')'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52


state 68
	sentencia_WHILE : WHILE '(' condicion . ')' bloque_unidad  (84)

	')'  shift 95
	.  error


state 69
	sentencias : sentencias sentencia ';' .  (5)

	.  reduce 5


state 70
	declaracion_funciones : tipo FUN ID . parametros_parentesis BEGIN cuerpo_funcion END  (19)

	'('  shift 71
	.  error

	parametros_parentesis  goto 96


state 71
	parametros_parentesis : '(' . parametros_formal ')'  (21)
	parametros_parentesis : '(' . ')'  (22)
	parametros_parentesis : '(' . error ')'  (23)

	error  shift 97
	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 98
	.  error

	ID_simple  goto 90
	tipo  goto 99
	parametros_formal  goto 100
	parametro  goto 101


state 72
	declaracion_funciones : tipo FUN parametros_parentesis . BEGIN cuerpo_funcion END  (20)

	BEGIN  shift 102
	.  error


state 73
	variables : variables ',' . variable_simple  (56)

	ID  shift 1
	.  error

	ID_simple  goto 41
	variable_simple  goto 103


state 74
	asignacion : variable_simple ASIGNACION expresion_arit .  (39)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 84
	'-'  shift 85
	$end  reduce 39
	IF  reduce 39
	END  reduce 39
	OUTF  reduce 39
	TYPEDEF  reduce 39
	RET  reduce 39
	ID  reduce 39
	WHILE  reduce 39
	GOTO  reduce 39
	INTEGER  reduce 39
	DOUBLE  reduce 39
	';'  reduce 39
	')'  reduce 39


state 75
	asignacion : variable_simple '{' CTE . '}' ASIGNACION expresion_arit  (40)

	'}'  shift 104
	.  error


state 76
	list_expre : expresion_arit .  (45)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 84
	'-'  shift 85
	','  reduce 45
	')'  reduce 45


state 77
	list_expre : list_expre . ',' expresion_arit  (44)
	condicion : '(' list_expre . ')' comparador '(' list_expre ')'  (64)

	','  shift 105
	')'  shift 106
	.  error


state 78
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' END_IF  (63)

	THEN  shift 107
	.  error


state 79
	CTE_con_sig : '-' CTE .  (61)

	.  reduce 61


state 80
	cadena : '[' ']' .  (83)

	.  reduce 83


state 81
	invocacion : ID_simple '(' . parametro_real ')'  (41)
	invocacion : ID_simple '(' . tipo parametros_formal ')'  (42)

	CTE  shift 49
	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	'-'  shift 52
	.  error

	ID_simple  goto 54
	tipo  goto 108
	CTE_con_sig  goto 56
	expresion_arit  goto 76
	variable_simple  goto 67
	invocacion  goto 60
	parametro_real  goto 109
	list_expre  goto 110
	termino  goto 61
	factor  goto 62


state 82
	outf_rule : OUTF '(' sentencias ')' .  (38)

	.  reduce 38


state 83
	outf_rule : OUTF '(' expresion_arit ')' .  (35)

	.  reduce 35


state 84
	expresion_arit : expresion_arit '+' . termino  (46)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 111
	factor  goto 62


state 85
	expresion_arit : expresion_arit '-' . termino  (47)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 112
	factor  goto 62


state 86
	outf_rule : OUTF '(' cadena ')' .  (37)

	.  reduce 37


state 87
	asignacion : variable_simple '{' . CTE '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' . CTE '}'  (55)

	CTE  shift 113
	.  error


state 88
	termino : termino '*' . factor  (49)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	variable_simple  goto 67
	invocacion  goto 60
	factor  goto 114


state 89
	termino : termino '/' . factor  (50)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	variable_simple  goto 67
	invocacion  goto 60
	factor  goto 115


state 90
	tipo : ID_simple .  (16)

	.  reduce 16


state 91
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo . '>' ID_simple  (18)

	'>'  shift 116
	.  error


state 92
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo . '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	'{'  shift 117
	.  error


state 93
	retorno : RET '(' expresion_arit ')' .  (28)

	.  reduce 28


state 94
	factor : variable_simple '{' . CTE '}'  (55)

	CTE  shift 118
	.  error


state 95
	sentencia_WHILE : WHILE '(' condicion ')' . bloque_unidad  (84)

	IF  shift 4
	BEGIN  shift 119
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 121
	bloque_sentencia_simple  goto 122
	bloque_unidad_simple  goto 123
	bloque_unidad_multiple  goto 124


state 96
	declaracion_funciones : tipo FUN ID parametros_parentesis . BEGIN cuerpo_funcion END  (19)

	BEGIN  shift 125
	.  error


state 97
	parametros_parentesis : '(' error . ')'  (23)

	')'  shift 126
	.  error


state 98
	parametros_parentesis : '(' ')' .  (22)

	.  reduce 22


state 99
	parametro : tipo . ID_simple  (26)

	ID  shift 1
	.  error

	ID_simple  goto 127


state 100
	parametros_parentesis : '(' parametros_formal . ')'  (21)
	parametros_formal : parametros_formal . parametro ','  (24)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 128
	.  error

	ID_simple  goto 90
	tipo  goto 99
	parametro  goto 129


state 101
	parametros_formal : parametro .  (25)

	.  reduce 25


state 102
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN . cuerpo_funcion END  (20)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 130
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 131
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 103
	variables : variables ',' variable_simple .  (56)

	.  reduce 56


state 104
	asignacion : variable_simple '{' CTE '}' . ASIGNACION expresion_arit  (40)

	ASIGNACION  shift 132
	.  error


state 105
	list_expre : list_expre ',' . expresion_arit  (44)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 133
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 61
	factor  goto 62


state 106
	condicion : '(' list_expre ')' . comparador '(' list_expre ')'  (64)

	MAYORIGUAL  shift 134
	MENORIGUAL  shift 135
	DISTINTO  shift 136
	'<'  shift 137
	'>'  shift 138
	'='  shift 139
	.  error

	comparador  goto 140


state 107
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' END_IF  (63)

	IF  shift 4
	BEGIN  shift 119
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_unidad  goto 141
	bloque_sentencia_simple  goto 122
	bloque_unidad_simple  goto 123
	bloque_unidad_multiple  goto 124


state 108
	invocacion : ID_simple '(' tipo . parametros_formal ')'  (42)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 90
	tipo  goto 99
	parametros_formal  goto 142
	parametro  goto 101


state 109
	invocacion : ID_simple '(' parametro_real . ')'  (41)

	')'  shift 143
	.  error


state 110
	parametro_real : list_expre .  (43)
	list_expre : list_expre . ',' expresion_arit  (44)

	','  shift 105
	')'  reduce 43


state 111
	expresion_arit : expresion_arit '+' termino .  (46)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 46
	IF  reduce 46
	END  reduce 46
	OUTF  reduce 46
	TYPEDEF  reduce 46
	RET  reduce 46
	ID  reduce 46
	WHILE  reduce 46
	GOTO  reduce 46
	INTEGER  reduce 46
	DOUBLE  reduce 46
	';'  reduce 46
	','  reduce 46
	')'  reduce 46
	'+'  reduce 46
	'-'  reduce 46


state 112
	expresion_arit : expresion_arit '-' termino .  (47)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 88
	'/'  shift 89
	$end  reduce 47
	IF  reduce 47
	END  reduce 47
	OUTF  reduce 47
	TYPEDEF  reduce 47
	RET  reduce 47
	ID  reduce 47
	WHILE  reduce 47
	GOTO  reduce 47
	INTEGER  reduce 47
	DOUBLE  reduce 47
	';'  reduce 47
	','  reduce 47
	')'  reduce 47
	'+'  reduce 47
	'-'  reduce 47


state 113
	asignacion : variable_simple '{' CTE . '}' ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' CTE . '}'  (55)

	'}'  shift 144
	.  error


state 114
	termino : termino '*' factor .  (49)

	.  reduce 49


state 115
	termino : termino '/' factor .  (50)

	.  reduce 50


state 116
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' . ID_simple  (18)

	ID  shift 1
	.  error

	ID_simple  goto 145


state 117
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' . CTE_con_sig ',' CTE_con_sig '}'  (17)

	CTE  shift 49
	'-'  shift 52
	.  error

	CTE_con_sig  goto 146


state 118
	factor : variable_simple '{' CTE . '}'  (55)

	'}'  shift 147
	.  error


state 119
	bloque_unidad_multiple : BEGIN . bloque_sent_ejecutables END  (77)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sent_ejecutables  goto 148
	bloque_sentencia_simple  goto 149


state 120
	bloque_sentencia_simple : sentencia_ejecutable .  (81)

	.  reduce 81


state 121
	sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad .  (84)

	.  reduce 84


state 122
	bloque_unidad_simple : bloque_sentencia_simple .  (78)

	.  reduce 78


state 123
	bloque_unidad : bloque_unidad_simple .  (75)

	.  reduce 75


state 124
	bloque_unidad : bloque_unidad_multiple .  (76)

	.  reduce 76


state 125
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN . cuerpo_funcion END  (19)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 130
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 150
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 126
	parametros_parentesis : '(' error ')' .  (23)

	.  reduce 23


state 127
	parametro : tipo ID_simple .  (26)

	.  reduce 26


state 128
	parametros_parentesis : '(' parametros_formal ')' .  (21)

	.  reduce 21


state 129
	parametros_formal : parametros_formal parametro . ','  (24)

	','  shift 151
	.  error


state 130
	sentencias : sentencias . sentencia ';'  (5)
	cuerpo_funcion : sentencias .  (27)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	END  reduce 27

	ID_simple  goto 13
	sentencia  goto 38
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28


state 131
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN cuerpo_funcion . END  (20)

	END  shift 152
	.  error


state 132
	asignacion : variable_simple '{' CTE '}' ASIGNACION . expresion_arit  (40)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 153
	variable_simple  goto 67
	invocacion  goto 60
	termino  goto 61
	factor  goto 62


state 133
	list_expre : list_expre ',' expresion_arit .  (44)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 84
	'-'  shift 85
	','  reduce 44
	')'  reduce 44


state 134
	comparador : MAYORIGUAL .  (66)

	.  reduce 66


state 135
	comparador : MENORIGUAL .  (68)

	.  reduce 68


state 136
	comparador : DISTINTO .  (70)

	.  reduce 70


state 137
	comparador : '<' .  (67)

	.  reduce 67


state 138
	comparador : '>' .  (65)

	.  reduce 65


state 139
	comparador : '=' .  (69)

	.  reduce 69


state 140
	condicion : '(' list_expre ')' comparador . '(' list_expre ')'  (64)

	'('  shift 154
	.  error


state 141
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' END_IF  (63)

	';'  shift 155
	.  error


state 142
	parametros_formal : parametros_formal . parametro ','  (24)
	invocacion : ID_simple '(' tipo parametros_formal . ')'  (42)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 156
	.  error

	ID_simple  goto 90
	tipo  goto 99
	parametro  goto 129


state 143
	invocacion : ID_simple '(' parametro_real ')' .  (41)

	.  reduce 41


state 144
	asignacion : variable_simple '{' CTE '}' . ASIGNACION expresion_arit  (40)
	factor : variable_simple '{' CTE '}' .  (55)

	ASIGNACION  shift 132
	')'  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	'*'  reduce 55
	'/'  reduce 55


state 145
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' ID_simple .  (18)

	.  reduce 18


state 146
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig . ',' CTE_con_sig '}'  (17)

	','  shift 157
	.  error


state 147
	factor : variable_simple '{' CTE '}' .  (55)

	.  reduce 55


state 148
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables . END  (77)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (79)

	IF  shift 4
	END  shift 158
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 159


state 149
	bloque_sent_ejecutables : bloque_sentencia_simple .  (80)

	.  reduce 80


state 150
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion . END  (19)

	END  shift 160
	.  error


state 151
	parametros_formal : parametros_formal parametro ',' .  (24)

	.  reduce 24


state 152
	declaracion_funciones : tipo FUN parametros_parentesis BEGIN cuerpo_funcion END .  (20)

	.  reduce 20


state 153
	asignacion : variable_simple '{' CTE '}' ASIGNACION expresion_arit .  (40)
	expresion_arit : expresion_arit . '+' termino  (46)
	expresion_arit : expresion_arit . '-' termino  (47)

	'+'  shift 84
	'-'  shift 85
	$end  reduce 40
	IF  reduce 40
	END  reduce 40
	OUTF  reduce 40
	TYPEDEF  reduce 40
	RET  reduce 40
	ID  reduce 40
	WHILE  reduce 40
	GOTO  reduce 40
	INTEGER  reduce 40
	DOUBLE  reduce 40
	';'  reduce 40
	')'  reduce 40


state 154
	condicion : '(' list_expre ')' comparador '(' . list_expre ')'  (64)

	CTE  shift 49
	ID  shift 1
	'-'  shift 52
	.  error

	ID_simple  goto 65
	CTE_con_sig  goto 56
	expresion_arit  goto 76
	variable_simple  goto 67
	invocacion  goto 60
	list_expre  goto 161
	termino  goto 61
	factor  goto 62


state 155
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . bloque_else ';' END_IF  (62)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . END_IF  (63)

	ELSE  shift 162
	END_IF  shift 163
	.  error

	bloque_else  goto 164
	bloque_else_simple  goto 165
	bloque_else_multiple  goto 166


state 156
	invocacion : ID_simple '(' tipo parametros_formal ')' .  (42)

	.  reduce 42


state 157
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' . CTE_con_sig '}'  (17)

	CTE  shift 49
	'-'  shift 52
	.  error

	CTE_con_sig  goto 167


state 158
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END .  (77)

	.  reduce 77


state 159
	bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple .  (79)

	.  reduce 79


state 160
	declaracion_funciones : tipo FUN ID parametros_parentesis BEGIN cuerpo_funcion END .  (19)

	.  reduce 19


state 161
	list_expre : list_expre . ',' expresion_arit  (44)
	condicion : '(' list_expre ')' comparador '(' list_expre . ')'  (64)

	','  shift 105
	')'  shift 168
	.  error


state 162
	bloque_else_multiple : ELSE . BEGIN bloque_sent_ejecutables END  (73)
	bloque_else_simple : ELSE . bloque_sentencia_simple  (74)

	IF  shift 4
	BEGIN  shift 169
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 170


state 163
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' END_IF .  (63)

	.  reduce 63


state 164
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else . ';' END_IF  (62)

	';'  shift 171
	.  error


state 165
	bloque_else : bloque_else_simple .  (71)

	.  reduce 71


state 166
	bloque_else : bloque_else_multiple .  (72)

	.  reduce 72


state 167
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig . '}'  (17)

	'}'  shift 172
	.  error


state 168
	condicion : '(' list_expre ')' comparador '(' list_expre ')' .  (64)

	.  reduce 64


state 169
	bloque_else_multiple : ELSE BEGIN . bloque_sent_ejecutables END  (73)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sent_ejecutables  goto 173
	bloque_sentencia_simple  goto 149


state 170
	bloque_else_simple : ELSE bloque_sentencia_simple .  (74)

	.  reduce 74


state 171
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' . END_IF  (62)

	END_IF  shift 174
	.  error


state 172
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}' .  (17)

	.  reduce 17


state 173
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables . END  (73)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (79)

	IF  shift 4
	END  shift 175
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 41
	sentencia_ejecutable  goto 120
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	outf_rule  goto 27
	variable_simple  goto 28
	bloque_sentencia_simple  goto 159


state 174
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF .  (62)

	.  reduce 62


state 175
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END .  (73)

	.  reduce 73


40 terminals, 41 nonterminals
86 grammar rules, 176 states
