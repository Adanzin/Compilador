   0  $accept : programa $end

   1  programa : ID_simple BEGIN sentencias END
   2           | ID_simple sentencias END
   3           | ID_simple BEGIN sentencias
   4           | ID_simple sentencias

   5  sentencias : sentencias sentencia ';'
   6             | sentencia ';'
   7             | sentencia

   8  sentencia : sentencia_declarativa
   9            | sentencia_ejecutable

  10  sentencia_declarativa : declaracion_variable
  11                        | declaracion_funciones
  12                        | declaracion_subtipo

  13  declaracion_variable : tipo variables

  14  tipo : INTEGER
  15       | DOUBLE
  16       | ID_simple

  17  declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'
  18                      | TYPEDEF TRIPLE '<' tipo '>' ID_simple

  19  declaracion_funciones : tipo FUN ID '(' parametros_formal ')' BEGIN cuerpo_funcion END
  20                        | tipo FUN '(' parametros_formal ')' BEGIN cuerpo_funcion END

  21  parametros_formal : parametros_formal parametro ','
  22                    | parametro

  23  parametro : tipo ID_simple

  24  cuerpo_funcion : sentencias

  25  retorno : RET '(' expresion_arit ')'

  26  sentencia_ejecutable : asignacion
  27                       | sentencia_IF
  28                       | sentencia_WHILE
  29                       | sentencia_goto
  30                       | OUTF '(' expresion_arit ')'
  31                       | OUTF '(' cadena ')'
  32                       | retorno

  33  asignacion : variable_simple ASIGNACION expresion_arit
  34             | variable_simple '{' CTE '}' ASIGNACION expresion_arit

  35  invocacion : variable_simple '(' parametro_real ')'
  36             | variable_simple '(' tipo parametros_formal ')'

  37  parametro_real : list_expre

  38  list_expre : list_expre ',' expresion_arit
  39             | expresion_arit

  40  expresion_arit : expresion_arit '+' termino
  41                 | expresion_arit '-' termino
  42                 | termino

  43  termino : termino '*' factor
  44          | termino '/' factor
  45          | factor

  46  factor : variable_simple
  47         | CTE_con_sig
  48         | invocacion
  49         | variable_simple '{' CTE '}'

  50  variables : variables ',' variable_simple
  51            | variable_simple

  52  variable_simple : ID_simple

  53  ID_simple : ID

  54  CTE_con_sig : CTE
  55              | '-' CTE

  56  sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF
  57               | IF '(' condicion ')' THEN bloque_unidad ';' END_IF

  58  condicion : '(' list_expre ')' comparador '(' list_expre ')'

  59  comparador : '>'
  60             | MAYORIGUAL
  61             | '<'
  62             | MENORIGUAL
  63             | '='
  64             | DISTINTO

  65  bloque_else : bloque_else_simple
  66              | bloque_else_multiple

  67  bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END

  68  bloque_else_simple : ELSE bloque_sentencia_simple

  69  bloque_unidad : bloque_unidad_simple
  70                | bloque_unidad_multiple

  71  bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END

  72  bloque_unidad_simple : bloque_sentencia_simple

  73  bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple
  74                          | bloque_sentencia_simple

  75  bloque_sentencia_simple : sentencia_ejecutable

  76  cadena : CADENAMULTILINEA
  77         | '[' ']'

  78  sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad

  79  sentencia_goto : GOTO ETIQUETA

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2
	ID_simple  goto 3


state 1
	ID_simple : ID .  (53)

	.  reduce 53


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : ID_simple . BEGIN sentencias END  (1)
	programa : ID_simple . sentencias END  (2)
	programa : ID_simple . BEGIN sentencias  (3)
	programa : ID_simple . sentencias  (4)

	IF  shift 4
	BEGIN  shift 5
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 14
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 4
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF . '(' condicion ')' THEN bloque_unidad ';' END_IF  (57)

	'('  shift 28
	.  error


state 5
	programa : ID_simple BEGIN . sentencias END  (1)
	programa : ID_simple BEGIN . sentencias  (3)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 29
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 6
	sentencia_ejecutable : OUTF . '(' expresion_arit ')'  (30)
	sentencia_ejecutable : OUTF . '(' cadena ')'  (31)

	'('  shift 30
	.  error


state 7
	declaracion_subtipo : TYPEDEF . ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)
	declaracion_subtipo : TYPEDEF . TRIPLE '<' tipo '>' ID_simple  (18)

	ID  shift 1
	TRIPLE  shift 31
	.  error

	ID_simple  goto 32


state 8
	retorno : RET . '(' expresion_arit ')'  (25)

	'('  shift 33
	.  error


state 9
	sentencia_WHILE : WHILE . '(' condicion ')' bloque_unidad  (78)

	'('  shift 34
	.  error


state 10
	sentencia_goto : GOTO . ETIQUETA  (79)

	ETIQUETA  shift 35
	.  error


state 11
	tipo : INTEGER .  (14)

	.  reduce 14


state 12
	tipo : DOUBLE .  (15)

	.  reduce 15


state 13
	tipo : ID_simple .  (16)
	variable_simple : ID_simple .  (52)

	FUN  reduce 16
	ID  reduce 16
	INTEGER  reduce 16
	DOUBLE  reduce 16
	ASIGNACION  reduce 52
	'{'  reduce 52
	','  reduce 52
	'('  reduce 52
	')'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52


state 14
	programa : ID_simple sentencias . END  (2)
	programa : ID_simple sentencias .  (4)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 36
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 4

	ID_simple  goto 13
	sentencia  goto 37
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 15
	sentencias : sentencia . ';'  (6)
	sentencias : sentencia .  (7)

	';'  shift 38
	$end  reduce 7
	IF  reduce 7
	END  reduce 7
	OUTF  reduce 7
	TYPEDEF  reduce 7
	RET  reduce 7
	ID  reduce 7
	WHILE  reduce 7
	GOTO  reduce 7
	INTEGER  reduce 7
	DOUBLE  reduce 7


state 16
	sentencia : sentencia_declarativa .  (8)

	.  reduce 8


state 17
	sentencia : sentencia_ejecutable .  (9)

	.  reduce 9


state 18
	sentencia_declarativa : declaracion_variable .  (10)

	.  reduce 10


state 19
	sentencia_declarativa : declaracion_funciones .  (11)

	.  reduce 11


state 20
	sentencia_declarativa : declaracion_subtipo .  (12)

	.  reduce 12


state 21
	declaracion_variable : tipo . variables  (13)
	declaracion_funciones : tipo . FUN ID '(' parametros_formal ')' BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo . FUN '(' parametros_formal ')' BEGIN cuerpo_funcion END  (20)

	FUN  shift 39
	ID  shift 1
	.  error

	ID_simple  goto 40
	variables  goto 41
	variable_simple  goto 42


state 22
	sentencia_ejecutable : retorno .  (32)

	.  reduce 32


state 23
	sentencia_ejecutable : asignacion .  (26)

	.  reduce 26


state 24
	sentencia_ejecutable : sentencia_IF .  (27)

	.  reduce 27


state 25
	sentencia_ejecutable : sentencia_WHILE .  (28)

	.  reduce 28


state 26
	sentencia_ejecutable : sentencia_goto .  (29)

	.  reduce 29


state 27
	asignacion : variable_simple . ASIGNACION expresion_arit  (33)
	asignacion : variable_simple . '{' CTE '}' ASIGNACION expresion_arit  (34)

	ASIGNACION  shift 43
	'{'  shift 44
	.  error


state 28
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' . condicion ')' THEN bloque_unidad ';' END_IF  (57)

	'('  shift 45
	.  error

	condicion  goto 46


state 29
	programa : ID_simple BEGIN sentencias . END  (1)
	programa : ID_simple BEGIN sentencias .  (3)
	sentencias : sentencias . sentencia ';'  (5)

	IF  shift 4
	END  shift 47
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	$end  reduce 3

	ID_simple  goto 13
	sentencia  goto 37
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 30
	sentencia_ejecutable : OUTF '(' . expresion_arit ')'  (30)
	sentencia_ejecutable : OUTF '(' . cadena ')'  (31)

	CTE  shift 48
	ID  shift 1
	CADENAMULTILINEA  shift 49
	'-'  shift 50
	'['  shift 51
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 53
	cadena  goto 54
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 57
	factor  goto 58


state 31
	declaracion_subtipo : TYPEDEF TRIPLE . '<' tipo '>' ID_simple  (18)

	'<'  shift 59
	.  error


state 32
	declaracion_subtipo : TYPEDEF ID_simple . ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ASIGNACION  shift 60
	.  error


state 33
	retorno : RET '(' . expresion_arit ')'  (25)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 61
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 57
	factor  goto 58


state 34
	sentencia_WHILE : WHILE '(' . condicion ')' bloque_unidad  (78)

	'('  shift 45
	.  error

	condicion  goto 62


state 35
	sentencia_goto : GOTO ETIQUETA .  (79)

	.  reduce 79


state 36
	programa : ID_simple sentencias END .  (2)

	.  reduce 2


state 37
	sentencias : sentencias sentencia . ';'  (5)

	';'  shift 63
	.  error


state 38
	sentencias : sentencia ';' .  (6)

	.  reduce 6


state 39
	declaracion_funciones : tipo FUN . ID '(' parametros_formal ')' BEGIN cuerpo_funcion END  (19)
	declaracion_funciones : tipo FUN . '(' parametros_formal ')' BEGIN cuerpo_funcion END  (20)

	ID  shift 64
	'('  shift 65
	.  error


state 40
	variable_simple : ID_simple .  (52)

	.  reduce 52


state 41
	declaracion_variable : tipo variables .  (13)
	variables : variables . ',' variable_simple  (50)

	','  shift 66
	$end  reduce 13
	IF  reduce 13
	END  reduce 13
	OUTF  reduce 13
	TYPEDEF  reduce 13
	RET  reduce 13
	ID  reduce 13
	WHILE  reduce 13
	GOTO  reduce 13
	INTEGER  reduce 13
	DOUBLE  reduce 13
	';'  reduce 13


state 42
	variables : variable_simple .  (51)

	.  reduce 51


state 43
	asignacion : variable_simple ASIGNACION . expresion_arit  (33)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 67
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 57
	factor  goto 58


state 44
	asignacion : variable_simple '{' . CTE '}' ASIGNACION expresion_arit  (34)

	CTE  shift 68
	.  error


state 45
	condicion : '(' . list_expre ')' comparador '(' list_expre ')'  (58)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 69
	variable_simple  goto 55
	invocacion  goto 56
	list_expre  goto 70
	termino  goto 57
	factor  goto 58


state 46
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' condicion . ')' THEN bloque_unidad ';' END_IF  (57)

	')'  shift 71
	.  error


state 47
	programa : ID_simple BEGIN sentencias END .  (1)

	.  reduce 1


state 48
	CTE_con_sig : CTE .  (54)

	.  reduce 54


state 49
	cadena : CADENAMULTILINEA .  (76)

	.  reduce 76


state 50
	CTE_con_sig : '-' . CTE  (55)

	CTE  shift 72
	.  error


state 51
	cadena : '[' . ']'  (77)

	']'  shift 73
	.  error


state 52
	factor : CTE_con_sig .  (47)

	.  reduce 47


state 53
	sentencia_ejecutable : OUTF '(' expresion_arit . ')'  (30)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	')'  shift 74
	'+'  shift 75
	'-'  shift 76
	.  error


state 54
	sentencia_ejecutable : OUTF '(' cadena . ')'  (31)

	')'  shift 77
	.  error


state 55
	invocacion : variable_simple . '(' parametro_real ')'  (35)
	invocacion : variable_simple . '(' tipo parametros_formal ')'  (36)
	factor : variable_simple .  (46)
	factor : variable_simple . '{' CTE '}'  (49)

	'{'  shift 78
	'('  shift 79
	$end  reduce 46
	IF  reduce 46
	END  reduce 46
	OUTF  reduce 46
	TYPEDEF  reduce 46
	RET  reduce 46
	ID  reduce 46
	WHILE  reduce 46
	GOTO  reduce 46
	INTEGER  reduce 46
	DOUBLE  reduce 46
	';'  reduce 46
	','  reduce 46
	')'  reduce 46
	'+'  reduce 46
	'-'  reduce 46
	'*'  reduce 46
	'/'  reduce 46


state 56
	factor : invocacion .  (48)

	.  reduce 48


state 57
	expresion_arit : termino .  (42)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 80
	'/'  shift 81
	$end  reduce 42
	IF  reduce 42
	END  reduce 42
	OUTF  reduce 42
	TYPEDEF  reduce 42
	RET  reduce 42
	ID  reduce 42
	WHILE  reduce 42
	GOTO  reduce 42
	INTEGER  reduce 42
	DOUBLE  reduce 42
	';'  reduce 42
	','  reduce 42
	')'  reduce 42
	'+'  reduce 42
	'-'  reduce 42


state 58
	termino : factor .  (45)

	.  reduce 45


state 59
	declaracion_subtipo : TYPEDEF TRIPLE '<' . tipo '>' ID_simple  (18)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 82
	tipo  goto 83


state 60
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION . tipo '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 82
	tipo  goto 84


state 61
	retorno : RET '(' expresion_arit . ')'  (25)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	')'  shift 85
	'+'  shift 75
	'-'  shift 76
	.  error


state 62
	sentencia_WHILE : WHILE '(' condicion . ')' bloque_unidad  (78)

	')'  shift 86
	.  error


state 63
	sentencias : sentencias sentencia ';' .  (5)

	.  reduce 5


state 64
	declaracion_funciones : tipo FUN ID . '(' parametros_formal ')' BEGIN cuerpo_funcion END  (19)

	'('  shift 87
	.  error


state 65
	declaracion_funciones : tipo FUN '(' . parametros_formal ')' BEGIN cuerpo_funcion END  (20)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametros_formal  goto 89
	parametro  goto 90


state 66
	variables : variables ',' . variable_simple  (50)

	ID  shift 1
	.  error

	ID_simple  goto 40
	variable_simple  goto 91


state 67
	asignacion : variable_simple ASIGNACION expresion_arit .  (33)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	'+'  shift 75
	'-'  shift 76
	$end  reduce 33
	IF  reduce 33
	END  reduce 33
	OUTF  reduce 33
	TYPEDEF  reduce 33
	RET  reduce 33
	ID  reduce 33
	WHILE  reduce 33
	GOTO  reduce 33
	INTEGER  reduce 33
	DOUBLE  reduce 33
	';'  reduce 33


state 68
	asignacion : variable_simple '{' CTE . '}' ASIGNACION expresion_arit  (34)

	'}'  shift 92
	.  error


state 69
	list_expre : expresion_arit .  (39)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	'+'  shift 75
	'-'  shift 76
	','  reduce 39
	')'  reduce 39


state 70
	list_expre : list_expre . ',' expresion_arit  (38)
	condicion : '(' list_expre . ')' comparador '(' list_expre ')'  (58)

	','  shift 93
	')'  shift 94
	.  error


state 71
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' condicion ')' . THEN bloque_unidad ';' END_IF  (57)

	THEN  shift 95
	.  error


state 72
	CTE_con_sig : '-' CTE .  (55)

	.  reduce 55


state 73
	cadena : '[' ']' .  (77)

	.  reduce 77


state 74
	sentencia_ejecutable : OUTF '(' expresion_arit ')' .  (30)

	.  reduce 30


state 75
	expresion_arit : expresion_arit '+' . termino  (40)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 96
	factor  goto 58


state 76
	expresion_arit : expresion_arit '-' . termino  (41)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 97
	factor  goto 58


state 77
	sentencia_ejecutable : OUTF '(' cadena ')' .  (31)

	.  reduce 31


state 78
	factor : variable_simple '{' . CTE '}'  (49)

	CTE  shift 98
	.  error


state 79
	invocacion : variable_simple '(' . parametro_real ')'  (35)
	invocacion : variable_simple '(' . tipo parametros_formal ')'  (36)

	CTE  shift 48
	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	'-'  shift 50
	.  error

	ID_simple  goto 13
	tipo  goto 99
	CTE_con_sig  goto 52
	expresion_arit  goto 69
	variable_simple  goto 55
	invocacion  goto 56
	parametro_real  goto 100
	list_expre  goto 101
	termino  goto 57
	factor  goto 58


state 80
	termino : termino '*' . factor  (43)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	variable_simple  goto 55
	invocacion  goto 56
	factor  goto 102


state 81
	termino : termino '/' . factor  (44)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	variable_simple  goto 55
	invocacion  goto 56
	factor  goto 103


state 82
	tipo : ID_simple .  (16)

	.  reduce 16


state 83
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo . '>' ID_simple  (18)

	'>'  shift 104
	.  error


state 84
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo . '{' CTE_con_sig ',' CTE_con_sig '}'  (17)

	'{'  shift 105
	.  error


state 85
	retorno : RET '(' expresion_arit ')' .  (25)

	.  reduce 25


state 86
	sentencia_WHILE : WHILE '(' condicion ')' . bloque_unidad  (78)

	IF  shift 4
	BEGIN  shift 106
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_unidad  goto 108
	bloque_sentencia_simple  goto 109
	bloque_unidad_simple  goto 110
	bloque_unidad_multiple  goto 111


state 87
	declaracion_funciones : tipo FUN ID '(' . parametros_formal ')' BEGIN cuerpo_funcion END  (19)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametros_formal  goto 112
	parametro  goto 90


state 88
	parametro : tipo . ID_simple  (23)

	ID  shift 1
	.  error

	ID_simple  goto 113


state 89
	declaracion_funciones : tipo FUN '(' parametros_formal . ')' BEGIN cuerpo_funcion END  (20)
	parametros_formal : parametros_formal . parametro ','  (21)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 114
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametro  goto 115


state 90
	parametros_formal : parametro .  (22)

	.  reduce 22


state 91
	variables : variables ',' variable_simple .  (50)

	.  reduce 50


state 92
	asignacion : variable_simple '{' CTE '}' . ASIGNACION expresion_arit  (34)

	ASIGNACION  shift 116
	.  error


state 93
	list_expre : list_expre ',' . expresion_arit  (38)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 117
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 57
	factor  goto 58


state 94
	condicion : '(' list_expre ')' . comparador '(' list_expre ')'  (58)

	MAYORIGUAL  shift 118
	MENORIGUAL  shift 119
	DISTINTO  shift 120
	'<'  shift 121
	'>'  shift 122
	'='  shift 123
	.  error

	comparador  goto 124


state 95
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' condicion ')' THEN . bloque_unidad ';' END_IF  (57)

	IF  shift 4
	BEGIN  shift 106
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_unidad  goto 125
	bloque_sentencia_simple  goto 109
	bloque_unidad_simple  goto 110
	bloque_unidad_multiple  goto 111


state 96
	expresion_arit : expresion_arit '+' termino .  (40)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 80
	'/'  shift 81
	$end  reduce 40
	IF  reduce 40
	END  reduce 40
	OUTF  reduce 40
	TYPEDEF  reduce 40
	RET  reduce 40
	ID  reduce 40
	WHILE  reduce 40
	GOTO  reduce 40
	INTEGER  reduce 40
	DOUBLE  reduce 40
	';'  reduce 40
	','  reduce 40
	')'  reduce 40
	'+'  reduce 40
	'-'  reduce 40


state 97
	expresion_arit : expresion_arit '-' termino .  (41)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 80
	'/'  shift 81
	$end  reduce 41
	IF  reduce 41
	END  reduce 41
	OUTF  reduce 41
	TYPEDEF  reduce 41
	RET  reduce 41
	ID  reduce 41
	WHILE  reduce 41
	GOTO  reduce 41
	INTEGER  reduce 41
	DOUBLE  reduce 41
	';'  reduce 41
	','  reduce 41
	')'  reduce 41
	'+'  reduce 41
	'-'  reduce 41


state 98
	factor : variable_simple '{' CTE . '}'  (49)

	'}'  shift 126
	.  error


state 99
	invocacion : variable_simple '(' tipo . parametros_formal ')'  (36)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametros_formal  goto 127
	parametro  goto 90


state 100
	invocacion : variable_simple '(' parametro_real . ')'  (35)

	')'  shift 128
	.  error


state 101
	parametro_real : list_expre .  (37)
	list_expre : list_expre . ',' expresion_arit  (38)

	','  shift 93
	')'  reduce 37


state 102
	termino : termino '*' factor .  (43)

	.  reduce 43


state 103
	termino : termino '/' factor .  (44)

	.  reduce 44


state 104
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' . ID_simple  (18)

	ID  shift 1
	.  error

	ID_simple  goto 129


state 105
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' . CTE_con_sig ',' CTE_con_sig '}'  (17)

	CTE  shift 48
	'-'  shift 50
	.  error

	CTE_con_sig  goto 130


state 106
	bloque_unidad_multiple : BEGIN . bloque_sent_ejecutables END  (71)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_sent_ejecutables  goto 131
	bloque_sentencia_simple  goto 132


state 107
	bloque_sentencia_simple : sentencia_ejecutable .  (75)

	.  reduce 75


state 108
	sentencia_WHILE : WHILE '(' condicion ')' bloque_unidad .  (78)

	.  reduce 78


state 109
	bloque_unidad_simple : bloque_sentencia_simple .  (72)

	.  reduce 72


state 110
	bloque_unidad : bloque_unidad_simple .  (69)

	.  reduce 69


state 111
	bloque_unidad : bloque_unidad_multiple .  (70)

	.  reduce 70


state 112
	declaracion_funciones : tipo FUN ID '(' parametros_formal . ')' BEGIN cuerpo_funcion END  (19)
	parametros_formal : parametros_formal . parametro ','  (21)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 133
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametro  goto 115


state 113
	parametro : tipo ID_simple .  (23)

	.  reduce 23


state 114
	declaracion_funciones : tipo FUN '(' parametros_formal ')' . BEGIN cuerpo_funcion END  (20)

	BEGIN  shift 134
	.  error


state 115
	parametros_formal : parametros_formal parametro . ','  (21)

	','  shift 135
	.  error


state 116
	asignacion : variable_simple '{' CTE '}' ASIGNACION . expresion_arit  (34)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 136
	variable_simple  goto 55
	invocacion  goto 56
	termino  goto 57
	factor  goto 58


state 117
	list_expre : list_expre ',' expresion_arit .  (38)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	'+'  shift 75
	'-'  shift 76
	','  reduce 38
	')'  reduce 38


state 118
	comparador : MAYORIGUAL .  (60)

	.  reduce 60


state 119
	comparador : MENORIGUAL .  (62)

	.  reduce 62


state 120
	comparador : DISTINTO .  (64)

	.  reduce 64


state 121
	comparador : '<' .  (61)

	.  reduce 61


state 122
	comparador : '>' .  (59)

	.  reduce 59


state 123
	comparador : '=' .  (63)

	.  reduce 63


state 124
	condicion : '(' list_expre ')' comparador . '(' list_expre ')'  (58)

	'('  shift 137
	.  error


state 125
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad . ';' END_IF  (57)

	';'  shift 138
	.  error


state 126
	factor : variable_simple '{' CTE '}' .  (49)

	.  reduce 49


state 127
	parametros_formal : parametros_formal . parametro ','  (21)
	invocacion : variable_simple '(' tipo parametros_formal . ')'  (36)

	ID  shift 1
	INTEGER  shift 11
	DOUBLE  shift 12
	')'  shift 139
	.  error

	ID_simple  goto 82
	tipo  goto 88
	parametro  goto 115


state 128
	invocacion : variable_simple '(' parametro_real ')' .  (35)

	.  reduce 35


state 129
	declaracion_subtipo : TYPEDEF TRIPLE '<' tipo '>' ID_simple .  (18)

	.  reduce 18


state 130
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig . ',' CTE_con_sig '}'  (17)

	','  shift 140
	.  error


state 131
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables . END  (71)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (73)

	IF  shift 4
	END  shift 141
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_sentencia_simple  goto 142


state 132
	bloque_sent_ejecutables : bloque_sentencia_simple .  (74)

	.  reduce 74


state 133
	declaracion_funciones : tipo FUN ID '(' parametros_formal ')' . BEGIN cuerpo_funcion END  (19)

	BEGIN  shift 143
	.  error


state 134
	declaracion_funciones : tipo FUN '(' parametros_formal ')' BEGIN . cuerpo_funcion END  (20)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 144
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 145
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 135
	parametros_formal : parametros_formal parametro ',' .  (21)

	.  reduce 21


state 136
	asignacion : variable_simple '{' CTE '}' ASIGNACION expresion_arit .  (34)
	expresion_arit : expresion_arit . '+' termino  (40)
	expresion_arit : expresion_arit . '-' termino  (41)

	'+'  shift 75
	'-'  shift 76
	$end  reduce 34
	IF  reduce 34
	END  reduce 34
	OUTF  reduce 34
	TYPEDEF  reduce 34
	RET  reduce 34
	ID  reduce 34
	WHILE  reduce 34
	GOTO  reduce 34
	INTEGER  reduce 34
	DOUBLE  reduce 34
	';'  reduce 34


state 137
	condicion : '(' list_expre ')' comparador '(' . list_expre ')'  (58)

	CTE  shift 48
	ID  shift 1
	'-'  shift 50
	.  error

	ID_simple  goto 40
	CTE_con_sig  goto 52
	expresion_arit  goto 69
	variable_simple  goto 55
	invocacion  goto 56
	list_expre  goto 146
	termino  goto 57
	factor  goto 58


state 138
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . bloque_else ';' END_IF  (56)
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' . END_IF  (57)

	ELSE  shift 147
	END_IF  shift 148
	.  error

	bloque_else  goto 149
	bloque_else_simple  goto 150
	bloque_else_multiple  goto 151


state 139
	invocacion : variable_simple '(' tipo parametros_formal ')' .  (36)

	.  reduce 36


state 140
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' . CTE_con_sig '}'  (17)

	CTE  shift 48
	'-'  shift 50
	.  error

	CTE_con_sig  goto 152


state 141
	bloque_unidad_multiple : BEGIN bloque_sent_ejecutables END .  (71)

	.  reduce 71


state 142
	bloque_sent_ejecutables : bloque_sent_ejecutables bloque_sentencia_simple .  (73)

	.  reduce 73


state 143
	declaracion_funciones : tipo FUN ID '(' parametros_formal ')' BEGIN . cuerpo_funcion END  (19)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	.  error

	ID_simple  goto 13
	sentencias  goto 144
	sentencia  goto 15
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	cuerpo_funcion  goto 153
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 144
	sentencias : sentencias . sentencia ';'  (5)
	cuerpo_funcion : sentencias .  (24)

	IF  shift 4
	OUTF  shift 6
	TYPEDEF  shift 7
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	INTEGER  shift 11
	DOUBLE  shift 12
	END  reduce 24

	ID_simple  goto 13
	sentencia  goto 37
	sentencia_declarativa  goto 16
	sentencia_ejecutable  goto 17
	declaracion_variable  goto 18
	declaracion_funciones  goto 19
	declaracion_subtipo  goto 20
	tipo  goto 21
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27


state 145
	declaracion_funciones : tipo FUN '(' parametros_formal ')' BEGIN cuerpo_funcion . END  (20)

	END  shift 154
	.  error


state 146
	list_expre : list_expre . ',' expresion_arit  (38)
	condicion : '(' list_expre ')' comparador '(' list_expre . ')'  (58)

	','  shift 93
	')'  shift 155
	.  error


state 147
	bloque_else_multiple : ELSE . BEGIN bloque_sent_ejecutables END  (67)
	bloque_else_simple : ELSE . bloque_sentencia_simple  (68)

	IF  shift 4
	BEGIN  shift 156
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_sentencia_simple  goto 157


state 148
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' END_IF .  (57)

	.  reduce 57


state 149
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else . ';' END_IF  (56)

	';'  shift 158
	.  error


state 150
	bloque_else : bloque_else_simple .  (65)

	.  reduce 65


state 151
	bloque_else : bloque_else_multiple .  (66)

	.  reduce 66


state 152
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig . '}'  (17)

	'}'  shift 159
	.  error


state 153
	declaracion_funciones : tipo FUN ID '(' parametros_formal ')' BEGIN cuerpo_funcion . END  (19)

	END  shift 160
	.  error


state 154
	declaracion_funciones : tipo FUN '(' parametros_formal ')' BEGIN cuerpo_funcion END .  (20)

	.  reduce 20


state 155
	condicion : '(' list_expre ')' comparador '(' list_expre ')' .  (58)

	.  reduce 58


state 156
	bloque_else_multiple : ELSE BEGIN . bloque_sent_ejecutables END  (67)

	IF  shift 4
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_sent_ejecutables  goto 161
	bloque_sentencia_simple  goto 132


state 157
	bloque_else_simple : ELSE bloque_sentencia_simple .  (68)

	.  reduce 68


state 158
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' . END_IF  (56)

	END_IF  shift 162
	.  error


state 159
	declaracion_subtipo : TYPEDEF ID_simple ASIGNACION tipo '{' CTE_con_sig ',' CTE_con_sig '}' .  (17)

	.  reduce 17


state 160
	declaracion_funciones : tipo FUN ID '(' parametros_formal ')' BEGIN cuerpo_funcion END .  (19)

	.  reduce 19


state 161
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables . END  (67)
	bloque_sent_ejecutables : bloque_sent_ejecutables . bloque_sentencia_simple  (73)

	IF  shift 4
	END  shift 163
	OUTF  shift 6
	RET  shift 8
	ID  shift 1
	WHILE  shift 9
	GOTO  shift 10
	.  error

	ID_simple  goto 40
	sentencia_ejecutable  goto 107
	retorno  goto 22
	asignacion  goto 23
	sentencia_IF  goto 24
	sentencia_WHILE  goto 25
	sentencia_goto  goto 26
	variable_simple  goto 27
	bloque_sentencia_simple  goto 142


state 162
	sentencia_IF : IF '(' condicion ')' THEN bloque_unidad ';' bloque_else ';' END_IF .  (56)

	.  reduce 56


state 163
	bloque_else_multiple : ELSE BEGIN bloque_sent_ejecutables END .  (67)

	.  reduce 67


40 terminals, 39 nonterminals
80 grammar rules, 164 states
