.586 
option casemap :none 
include \masm32\include\masm32rt.inc 
includelib \masm32\lib\kernel32.lib 
includelib \masm32\lib\user32.lib 
includelib \masm32\lib\masm32.lib 

dll_dllcrt0 PROTO C
printf PROTO C : VARARG 

.data 
Error_DivisionCero DB "Error: Division por cero", 10, 0 
Error_Overflow DB "Error: Overflow en producto entre Enteros", 10, 0 
Error_Subtipo_inferior DB "Error: Valor menor al rango inferior del subtipo ", 10, 0 
Error_Subtipo_superior DB "Error: Valor mayor al limite superior del subtipo ", 10, 0 
$_FIN_DE_PROGRAMA_$ DB "FIN DE LA EJECUCION DEL PROGRAMA ", 10, 0 
$_$mensajeEntero$_$ DB "%d, %d, %d", 10, 0 
$_$mensajeFloat$_$ DB "%f, %f, %f", 10, 0 
_B_es_igual_que_D db "B es igual que D", 10, 0 
@aux4 DQ ?
_B_no_es_mayor_que_D db "B no es mayor que D", 10, 0 
_A_no_es_igual_que_C db "A no es igual que C", 10, 0 
_No_son_mayorcitos db "No son mayorcitos", 10, 0 
_____POR_menor_igual___ db "-- POR menor igual --", 10, 0 
_A_es_mayor_o_igual_que_C db "A es mayor o igual que C", 10, 0 
_A_es_igual_que_C db "A es igual que C", 10, 0 
_No_son_distintos db "No son distintos", 10, 0 
_Son_distintos db "Son distintos", 10, 0 
f$MAIN DW ?
@aux3 DQ ?
@aux2 DQ ?
@aux1 DQ ?
_No_son_iguales db "No son iguales", 10, 0 
_B_no_es_igual_que_D db "B no es igual que D", 10, 0 
@ParametroRealInt DW ?
_A_es_distinto_que_C db "A es distinto que C", 10, 0 
_A_no_es_mayor_que_C db "A no es mayor que C", 10, 0 
_____POR_menor___ db "-- POR menor --", 10, 0 
_A_es_menor_o_igual_que_C db "A es menor o igual que C", 10, 0 
integer2 DW 2
integer3 DW 3
g$MAIN DW ?
integer4 DW 4
float3@0 DQ 3.0
integer5 DW 5
float5@0 DQ 5.0
a$MAIN DQ ?
d$MAIN DQ ?
_A_es_menor_que_C db "A es menor que C", 10, 0 
_A_no_es_menor_o_igual_que_C db "A no es menor o igual que C", 10, 0 
_____POR_IGUAL___ db "-- POR IGUAL --", 10, 0 
_B_es_menor_o_igual_que_D db "B es menor o igual que D", 10, 0 
_____POR_DISTINTO___ db "-- POR DISTINTO --", 10, 0 
_____COMPARANDO_ENTEROS___ db "-- COMPARANDO ENTEROS --", 10, 0 
_Son_mayorcitos db "Son mayorcitos", 10, 0 
_B_no_es_menor_que_D db "B no es menor que D", 10, 0 
_No_son_menorcitos db "No son menorcitos", 10, 0 
_____COMPARANDO_doubles___ db "-- COMPARANDO doubles --", 10, 0 
@ParametroRealFloat DQ ?
_A_es_mayor_que_C db "A es mayor que C", 10, 0 
c$MAIN DQ ?
_A_no_es_mayor_o_igual_que_C db "A no es mayor o igual que C", 10, 0 
_____POR_mayor_igual___ db "-- POR mayor igual --", 10, 0 
_____POR_mayor___ db "-- POR mayor --", 10, 0 
e$MAIN DW ?
b$MAIN DQ ?
h$MAIN DW ?
_B_no_es_mayor_o_igual_que_D db "B no es mayor o igual que D", 10, 0 
_Son_menorcitos_iguales db "Son menorcitos iguales", 10, 0 
_No_son_mayorcitos_iguales db "No son mayorcitos iguales", 10, 0 
_Son_iguales db "Son iguales", 10, 0 
_B_es_mayor_que_D db "B es mayor que D", 10, 0 
_B_no_es_menor_o_igual_que_D db "B no es menor o igual que D", 10, 0 
_A_no_es_menor_que_C db "A no es menor que C", 10, 0 
_A_no_es_distinto_que_C db "A no es distinto que C", 10, 0 
_No_son_menorcitos_iguales db "No son menorcitos iguales", 10, 0 
float2@0 DQ 2.0
float4@0 DQ 4.0
_B_es_menor_que_D db "B es menor que D", 10, 0 
_B_es_mayor_o_igual_que_D db "B es mayor o igual que D", 10, 0 
_B_es_distinto_que_D db "B es distinto que D", 10, 0 
_Son_menorcitos db "Son menorcitos", 10, 0 
_Son_mayorcitos_iguales db "Son mayorcitos iguales", 10, 0 
_B_no_es_distinto_que_D db "B no es distinto que D", 10, 0 

.code 
 
start: 
invoke printf, addr _____COMPARANDO_doubles___ 
 
FLD float2@0
FLD a$MAIN
FXCH 
FSTP a$MAIN
FINIT 
 
FLD float3@0
FLD b$MAIN
FXCH 
FSTP b$MAIN
FINIT 
 
FLD float4@0
FLD c$MAIN
FXCH 
FSTP c$MAIN
FINIT 
 
FLD float5@0
FLD d$MAIN
FXCH 
FSTP d$MAIN
FINIT 
 
invoke printf, addr _____POR_menor___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JAE LABEL30
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JAE LABEL30
 
invoke printf, addr _Son_menorcitos 
 
JMP LABEL33
 
LABEL30: 
invoke printf, addr _No_son_menorcitos 
 
LABEL33: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JAE LABEL43
 
invoke printf, addr _A_es_menor_que_C 
 
JMP LABEL46
 
LABEL43: 
invoke printf, addr _A_no_es_menor_que_C 
 
LABEL46: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JAE LABEL56
 
invoke printf, addr _B_es_menor_que_D 
 
JMP LABEL59
 
LABEL56: 
invoke printf, addr _B_no_es_menor_que_D 
 
LABEL59: 
invoke printf, addr _____POR_menor_igual___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JG LABEL76
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JG LABEL76
 
invoke printf, addr _Son_menorcitos_iguales 
 
JMP LABEL79
 
LABEL76: 
invoke printf, addr _No_son_menorcitos_iguales 
 
LABEL79: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JG LABEL89
 
invoke printf, addr _A_es_menor_o_igual_que_C 
 
JMP LABEL92
 
LABEL89: 
invoke printf, addr _A_no_es_menor_o_igual_que_C 
 
LABEL92: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JG LABEL102
 
invoke printf, addr _B_es_menor_o_igual_que_D 
 
JMP LABEL105
 
LABEL102: 
invoke printf, addr _B_no_es_menor_o_igual_que_D 
 
LABEL105: 
invoke printf, addr _____POR_mayor___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JLE LABEL122
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JLE LABEL122
 
invoke printf, addr _Son_mayorcitos 
 
JMP LABEL125
 
LABEL122: 
invoke printf, addr _No_son_mayorcitos 
 
LABEL125: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JLE LABEL135
 
invoke printf, addr _A_es_mayor_que_C 
 
JMP LABEL138
 
LABEL135: 
invoke printf, addr _A_no_es_mayor_que_C 
 
LABEL138: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JLE LABEL148
 
invoke printf, addr _B_es_mayor_que_D 
 
JMP LABEL151
 
LABEL148: 
invoke printf, addr _B_no_es_mayor_que_D 
 
LABEL151: 
invoke printf, addr _____POR_mayor_igual___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JL LABEL168
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JL LABEL168
 
invoke printf, addr _Son_mayorcitos_iguales 
 
JMP LABEL171
 
LABEL168: 
invoke printf, addr _No_son_mayorcitos_iguales 
 
LABEL171: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JL LABEL181
 
invoke printf, addr _A_es_mayor_o_igual_que_C 
 
JMP LABEL184
 
LABEL181: 
invoke printf, addr _A_no_es_mayor_o_igual_que_C 
 
LABEL184: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JL LABEL194
 
invoke printf, addr _B_es_mayor_o_igual_que_D 
 
JMP LABEL197
 
LABEL194: 
invoke printf, addr _B_no_es_mayor_o_igual_que_D 
 
LABEL197: 
invoke printf, addr _____POR_IGUAL___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JNE LABEL214
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JNE LABEL214
 
invoke printf, addr _Son_iguales 
 
JMP LABEL217
 
LABEL214: 
invoke printf, addr _No_son_iguales 
 
LABEL217: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JNE LABEL227
 
invoke printf, addr _A_es_igual_que_C 
 
JMP LABEL230
 
LABEL227: 
invoke printf, addr _A_no_es_igual_que_C 
 
LABEL230: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JNE LABEL240
 
invoke printf, addr _B_es_igual_que_D 
 
JMP LABEL243
 
LABEL240: 
invoke printf, addr _B_no_es_igual_que_D 
 
LABEL243: 
invoke printf, addr _____POR_DISTINTO___ 
 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JE LABEL260
 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JE LABEL260
 
invoke printf, addr _Son_distintos 
 
JMP LABEL263
 
LABEL260: 
invoke printf, addr _No_son_distintos 
 
LABEL263: 
FLD c$MAIN
FLD a$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JE LABEL273
 
invoke printf, addr _A_es_distinto_que_C 
 
JMP LABEL276
 
LABEL273: 
invoke printf, addr _A_no_es_distinto_que_C 
 
LABEL276: 
FLD d$MAIN
FLD b$MAIN
FCOMPP
FSTSW AX 
SAHF 
 FINIT 
 
JE LABEL286
 
invoke printf, addr _B_es_distinto_que_D 
 
JMP LABEL289
 
LABEL286: 
invoke printf, addr _B_no_es_distinto_que_D 
 
LABEL289: 
invoke printf, addr _____COMPARANDO_ENTEROS___ 
 
MOV AX, integer2
MOV e$MAIN, AX

 
MOV AX, integer3
MOV f$MAIN, AX

 
MOV AX, integer4
MOV g$MAIN, AX

 
MOV AX, integer5
MOV h$MAIN, AX

 
invoke printf, addr _____POR_menor___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JAE LABEL320
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JAE LABEL320
 
invoke printf, addr _Son_menorcitos 
 
JMP LABEL323
 
LABEL320: 
invoke printf, addr _No_son_menorcitos 
 
LABEL323: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JAE LABEL333
 
invoke printf, addr _A_es_menor_que_C 
 
JMP LABEL336
 
LABEL333: 
invoke printf, addr _A_no_es_menor_que_C 
 
LABEL336: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JAE LABEL346
 
invoke printf, addr _B_es_menor_que_D 
 
JMP LABEL349
 
LABEL346: 
invoke printf, addr _B_no_es_menor_que_D 
 
LABEL349: 
invoke printf, addr _____POR_menor_igual___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JG LABEL366
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JG LABEL366
 
invoke printf, addr _Son_menorcitos_iguales 
 
JMP LABEL369
 
LABEL366: 
invoke printf, addr _No_son_menorcitos_iguales 
 
LABEL369: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JG LABEL379
 
invoke printf, addr _A_es_menor_o_igual_que_C 
 
JMP LABEL382
 
LABEL379: 
invoke printf, addr _A_no_es_menor_o_igual_que_C 
 
LABEL382: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JG LABEL392
 
invoke printf, addr _B_es_menor_o_igual_que_D 
 
JMP LABEL395
 
LABEL392: 
invoke printf, addr _B_no_es_menor_o_igual_que_D 
 
LABEL395: 
invoke printf, addr _____POR_mayor___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JLE LABEL412
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JLE LABEL412
 
invoke printf, addr _Son_mayorcitos 
 
JMP LABEL415
 
LABEL412: 
invoke printf, addr _No_son_mayorcitos 
 
LABEL415: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JLE LABEL425
 
invoke printf, addr _A_es_mayor_que_C 
 
JMP LABEL428
 
LABEL425: 
invoke printf, addr _A_no_es_mayor_que_C 
 
LABEL428: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JLE LABEL438
 
invoke printf, addr _B_es_mayor_que_D 
 
JMP LABEL441
 
LABEL438: 
invoke printf, addr _B_no_es_mayor_que_D 
 
LABEL441: 
invoke printf, addr _____POR_mayor_igual___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JL LABEL458
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JL LABEL458
 
invoke printf, addr _Son_mayorcitos_iguales 
 
JMP LABEL461
 
LABEL458: 
invoke printf, addr _No_son_mayorcitos_iguales 
 
LABEL461: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JL LABEL471
 
invoke printf, addr _A_es_mayor_o_igual_que_C 
 
JMP LABEL474
 
LABEL471: 
invoke printf, addr _A_no_es_mayor_o_igual_que_C 
 
LABEL474: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JL LABEL484
 
invoke printf, addr _B_es_mayor_o_igual_que_D 
 
JMP LABEL487
 
LABEL484: 
invoke printf, addr _B_no_es_mayor_o_igual_que_D 
 
LABEL487: 
invoke printf, addr _____POR_IGUAL___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JNE LABEL504
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JNE LABEL504
 
invoke printf, addr _Son_iguales 
 
JMP LABEL507
 
LABEL504: 
invoke printf, addr _No_son_iguales 
 
LABEL507: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JNE LABEL517
 
invoke printf, addr _A_es_igual_que_C 
 
JMP LABEL520
 
LABEL517: 
invoke printf, addr _A_no_es_igual_que_C 
 
LABEL520: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JNE LABEL530
 
invoke printf, addr _B_es_igual_que_D 
 
JMP LABEL533
 
LABEL530: 
invoke printf, addr _B_no_es_igual_que_D 
 
LABEL533: 
invoke printf, addr _____POR_DISTINTO___ 
 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JE LABEL550
 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JE LABEL550
 
invoke printf, addr _Son_distintos 
 
JMP LABEL553
 
LABEL550: 
invoke printf, addr _No_son_distintos 
 
LABEL553: 
MOV AX, e$MAIN
MOV BX, g$MAIN
CMP AX,BX
 
JE LABEL563
 
invoke printf, addr _A_es_distinto_que_C 
 
JMP LABEL566
 
LABEL563: 
invoke printf, addr _A_no_es_distinto_que_C 
 
LABEL566: 
MOV AX, f$MAIN
MOV BX, h$MAIN
CMP AX,BX
 
JE LABEL576
 
invoke printf, addr _B_es_distinto_que_D 
 
JMP LABEL579
 
LABEL576: 
invoke printf, addr _B_no_es_distinto_que_D 
 
LABEL579: 
JMP fin 
 
Divison_Por_Cero:
invoke printf, addr Error_DivisionCero 
JMP fin

Overflow:
invoke printf, addr Error_Overflow 
JMP fin

Subtipo_inferior:
invoke printf, addr Error_Subtipo_inferior 
JMP fin

Subtipo_superior:
invoke printf, addr Error_Subtipo_superior 
JMP fin

fin: 
invoke printf, addr $_FIN_DE_PROGRAMA_$ 
invoke crt_getchar 
invoke ExitProcess, 0 
end start