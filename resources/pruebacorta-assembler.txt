.586 
option casemap :none 
include \masm32\include\masm32rt.inc 
includelib \masm32\lib\kernel32.lib 
includelib \masm32\lib\user32.lib 
includelib \masm32\lib\masm32.lib 

dll_dllcrt0 PROTO C
printf PROTO C : VARARG 

.data 
Error_DivisionCero DB "Error: Division por cero", 10, 0 
Error_Overflow DB "Error: Overflow en producto entre Enteros", 10, 0 
ESPERAR_ACCION_USUARIO DB "Haga click en ACEPTAR para cerrar el programa y la consola", 10, 0 
e$MAIN DW ?
b$MAIN DW ?
octi01 DW 1o 
octi02 DW 2o 
@aux5 DW ?
@ParametroRealInt DW ?
@aux4 DW ?
int15000 DW 15000
@ParametroRealFloat DQ ?
octi077 DW 77o 
c$MAIN DW ?
a$MAIN DW ?
d$MAIN DW ?
@aux3 DW ?
@aux2 DW ?
@aux1 DW ?

.code 
 
start: 
MOV AX, int15000
MOV a$MAIN, AX

 
MOV AX, octi077
MOV c$MAIN, AX

 
MOV AX, octi02
MOV d$MAIN, AX

 
MOV AX, octi01
MOV e$MAIN, AX

 
MOV AX, c$MAIN
ADD AX,d$MAIN
MOV @aux1,AX
 
invoke printf, cfm$("%hi\n"), @aux1
 
MOV AX, c$MAIN
SUB AX,d$MAIN
MOV @aux2,AX
 
invoke printf, cfm$("%hi\n"), @aux2
 
MOV AX, c$MAIN
IMUL d$MAIN
JO Overflow 
MOV @aux3,AX
 
invoke printf, cfm$("%hi\n"), @aux3
 
MOV AX, c$MAIN
MOV BX,d$MAIN
CMP BX,0
JE Divison_Por_Cero 
IDIV d$MAIN
MOV @aux4,AX
 
invoke printf, cfm$("%hi\n"), @aux4
 
MOV AX, e$MAIN
SUB AX,d$MAIN
MOV @aux5,AX
 
invoke printf, cfm$("%hi\n"), @aux5
 
JMP fin 
 
Divison_Por_Cero:
invoke MessageBox, NULL, addr Error_DivisionCero, addr Error_DivisionCero, MB_OK 
JMP fin

Overflow:
invoke MessageBox, NULL, addr Error_Overflow, addr Error_Overflow, MB_OK 
JMP fin

fin: 
invoke MessageBox, NULL, addr ESPERAR_ACCION_USUARIO, addr ESPERAR_ACCION_USUARIO, MB_OK 
invoke ExitProcess, 0 
end start